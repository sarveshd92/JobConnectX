{"mappings":"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","sources":["<anon>","Components/Jobs.component.js","Components/Job_jobcard.component.js"],"sourcesContent":["\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"beQeC\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $82e98543711ca9e0$export$2e2bcd8739ae039);\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $Bhtkb = parcelRequire(\"Bhtkb\");\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $fmRoT = parcelRequire(\"fmRoT\");\nconst $82e98543711ca9e0$var$Jobs = ()=>{\n    const jobcard = [\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8\n    ];\n    const metroCities = [\n        \"ALL\",\n        \"Mumbai\",\n        \"Delhi\",\n        \"Bengaluru\",\n        \"Chennai\",\n        \"Kolkata\",\n        \"Hyderabad\"\n    ];\n    const industries = [\n        \"ALL\",\n        \"Backend Engineer\",\n        \"Frontend Engineer\",\n        \"Full Stack Developer\",\n        \"Data Scientist\",\n        \"DevOps Engineer\"\n    ];\n    const salaryRanges = [\n        ,\n        \"ALL\",\n        \"0-5 LPA\",\n        \"5-10 LPA\",\n        \"10-15 LPA\",\n        \"15-20 LPA\",\n        \"20+ LPA\"\n    ];\n    const [getalljob, setgetalljob] = (0, $acw62.useState)([]);\n    const alljobref = (0, $acw62.useRef)();\n    const fetchdata = async ()=>{\n        try {\n            const result = await (0, $fmRoT.default).get(\"http://localhost:8000/api/v1/job/getalljobs\", {\n                withCredentials: true\n            });\n            setgetalljob(result?.data?.result || []);\n            alljobref.current = result?.data?.result || [];\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const [filters, setFilters] = (0, $acw62.useState)({\n        city: \"ALL\",\n        role: \"ALL\",\n        salary: \"ALL\"\n    });\n    const updateFilter = (type, value)=>{\n        setFilters((prev)=>({\n                ...prev,\n                [type]: value\n            }));\n    };\n    (0, $acw62.useEffect)(()=>{\n        if (!alljobref.current) return;\n        let filtered = [\n            ...alljobref.current\n        ];\n        // ✅ Filter by city\n        if (filters.city !== \"ALL\") filtered = filtered.filter((job)=>job.location.toLowerCase() === filters.city.toLowerCase());\n        // ✅ Filter by role\n        if (filters.role !== \"ALL\") {\n            const keyword = filters.role.split(\" \")[0].toLowerCase();\n            filtered = filtered.filter((job)=>job.title.toLowerCase().includes(keyword));\n        }\n        // ✅ Filter by salary\n        if (filters.salary !== \"ALL\") {\n            const numeric = parseInt(filters.salary.split(\"-\")[0].split(\"+\")[0]);\n            if (!isNaN(numeric)) filtered = filtered.filter((job)=>job.salary >= numeric);\n        }\n        setgetalljob(filtered);\n    }, [\n        filters\n    ]);\n    (0, $acw62.useEffect)(()=>{\n        fetchdata();\n    }, []);\n    return /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n        className: \"flex w-full h-[80%] border-black mt-4 box-border p-0\",\n        children: [\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                className: \"w-1/6 h-full ml-6 p-4\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"h2\", {\n                        className: \"font-bold border-b-2 border-gray-300\",\n                        children: \"Filter Data\"\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                        className: \"mt-4\",\n                        children: [\n                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"h3\", {\n                                className: \"font-bold\",\n                                children: \"Cities\"\n                            }),\n                            metroCities.map((mt, idx)=>/*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                    className: \"border-black pb-2\",\n                                    children: [\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"input\", {\n                                            type: \"radio\",\n                                            name: \"city\",\n                                            id: `city-${idx}`,\n                                            value: mt,\n                                            onClick: ()=>updateFilter(\"city\", mt)\n                                        }),\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"label\", {\n                                            className: \"font-semibold\",\n                                            htmlFor: `city-${idx}`,\n                                            children: mt\n                                        })\n                                    ]\n                                }, idx))\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                        className: \"mt-4\",\n                        children: [\n                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"h3\", {\n                                className: \"font-bold\",\n                                children: \"Industries\"\n                            }),\n                            industries.map((industry, idx)=>/*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                    className: \"border-black pb-2 font-sans\",\n                                    children: [\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"input\", {\n                                            type: \"radio\",\n                                            name: \"industry\",\n                                            id: `industry-${idx}`,\n                                            value: industry,\n                                            onClick: ()=>updateFilter(\"role\", industry)\n                                        }),\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"label\", {\n                                            className: \"font-semibold\",\n                                            htmlFor: `industry-${idx}`,\n                                            children: industry\n                                        })\n                                    ]\n                                }, idx))\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                        className: \"mt-4\",\n                        children: [\n                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"h3\", {\n                                className: \"font-bold\",\n                                children: \"Salary Range\"\n                            }),\n                            salaryRanges.map((salary, idx)=>/*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                                    className: \"border-black pb-2\",\n                                    children: [\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"input\", {\n                                            type: \"radio\",\n                                            name: \"salary\",\n                                            id: `salary-${idx}`,\n                                            value: salary,\n                                            onClick: ()=>updateFilter(\"salary\", salary)\n                                        }),\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"label\", {\n                                            className: \"font-semibold\",\n                                            htmlFor: `salary-${idx}`,\n                                            children: salary\n                                        })\n                                    ]\n                                }, idx))\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                className: \"w-5/6 h-full flex flex-wrap justify-between\",\n                children: getalljob.length === 0 ? jobcard.map((jb, idx)=>/*#__PURE__*/ (0, $ayMG0.jsx)((0, $Bhtkb.default), {}, idx)) : getalljob.map((jb, idx)=>/*#__PURE__*/ (0, $ayMG0.jsx)((0, $Bhtkb.default), {\n                        data: jb\n                    }, jb._id))\n            })\n        ]\n    });\n};\nvar $82e98543711ca9e0$export$2e2bcd8739ae039 = $82e98543711ca9e0$var$Jobs;\n\n});\nparcelRegister(\"Bhtkb\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $0701026300ee4dab$export$2e2bcd8739ae039);\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $lzNIT = parcelRequire(\"lzNIT\");\nconst $0701026300ee4dab$var$Job_jobcard = ({ data: data })=>{\n    const daysago = (mongodbtime)=>{\n        return Math.floor((new Date() - new Date(mongodbtime)) / 86400000);\n    };\n    return /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n        className: \"h-[auto] w-[300px] border-2 border-gray-200 shadow-md rounded-md p-2\",\n        children: [\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                className: \"flex justify-between items-center mb-2\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                        className: \"text-gray-600 text-xs font-medium\",\n                        children: daysago(data?.createdAt) === 0 ? \"Today\" : `${daysago(data?.createdAt)} Days ago`\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                        className: \"text-gray-600\",\n                        children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"img\", {\n                            className: \"h-4 w-4 fill-current\",\n                            src: \"https://path/to/your/image.png\",\n                            alt: \"Icon\"\n                        })\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                className: \"flex gap-2 items-center mb-2\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                        children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"img\", {\n                            className: \"w-8 h-8 rounded-md border-2 border-gray-200 object-contain\",\n                            src: `${data?.company?.logo}`,\n                            alt: \"Company Logo\"\n                        })\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                        className: \"flex flex-col items-start\",\n                        children: [\n                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"h1\", {\n                                className: \"text-lg font-semibold\",\n                                children: data?.company?.name\n                            }),\n                            /*#__PURE__*/ (0, $ayMG0.jsx)(\"h2\", {\n                                className: \"text-gray-400 text-sm\",\n                                children: \"India\"\n                            })\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsx)(\"h3\", {\n                className: \"mt-1 font-bold text-sm\",\n                children: data?.title\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsx)(\"p\", {\n                className: \"mt-1 text-gray-500 text-sm\",\n                children: \"Design and maintain server-side logic and database management systems.\"\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                className: \"flex justify-between my-2 text-xs\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                        className: \"text-blue-800 font-bold px-1 py-0.5 rounded\",\n                        children: data?.noofposition\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"span\", {\n                        className: \"text-red-600 font-bold px-1 py-0.5 rounded\",\n                        children: data?.jobType\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsxs)(\"span\", {\n                        className: \"text-[#683ac2] font-bold px-1 py-0.5 rounded\",\n                        children: [\n                            data?.salary,\n                            \" LPA\"\n                        ]\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n                className: \"flex justify-evenly mt-2\",\n                children: [\n                    /*#__PURE__*/ (0, $ayMG0.jsx)((0, $lzNIT.Link), {\n                        to: `/Details/${data?._id}`,\n                        children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                            type: \"button\",\n                            className: \"text-gray-900 bg-white border border-gray-300 hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 rounded-lg text-xs px-4 py-1 font-semibold\",\n                            children: \"Details\"\n                        })\n                    }),\n                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                        type: \"button\",\n                        className: \"bg-[#683ac2] border border-gray-300 hover:bg-[#683ac2] focus:ring-4 focus:ring-gray-100 rounded-lg text-xs px-4 py-1 font-semibold text-white\",\n                        children: \"Save for Later\"\n                    })\n                ]\n            })\n        ]\n    });\n};\nvar $0701026300ee4dab$export$2e2bcd8739ae039 = $0701026300ee4dab$var$Job_jobcard;\n\n});\n\n\n\n//# sourceMappingURL=Jobs.component.d60fec07.js.map\n","import Job_jobcard from \"./Job_jobcard.component.js\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Jobs = () => {\r\n  const jobcard = [1, 2, 3, 4, 5, 6, 7, 8];\r\n  const metroCities = [\"ALL\", \"Mumbai\", \"Delhi\", \"Bengaluru\", \"Chennai\", \"Kolkata\", \"Hyderabad\"];\r\n  const industries = [\"ALL\",\"Backend Engineer\", \"Frontend Engineer\", \"Full Stack Developer\", \"Data Scientist\", \"DevOps Engineer\"];\r\n  const salaryRanges = [,\"ALL\",\"0-5 LPA\", \"5-10 LPA\", \"10-15 LPA\", \"15-20 LPA\", \"20+ LPA\"];\r\n\r\n  const [getalljob, setgetalljob] = useState([]);\r\n\r\n  const alljobref = useRef();\r\n\r\n  const fetchdata = async () => {\r\n    try {\r\n      const result = await axios.get(\"http://localhost:8000/api/v1/job/getalljobs\", { withCredentials: true });\r\n      setgetalljob(result?.data?.result || []);\r\n      alljobref.current = result?.data?.result || [];\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const [filters, setFilters] = useState({\r\n  city: \"ALL\",\r\n  role: \"ALL\",\r\n  salary: \"ALL\",\r\n});\r\n\r\nconst updateFilter = (type, value) => {\r\n  setFilters((prev) => ({\r\n    ...prev,\r\n    [type]: value,\r\n  }));\r\n};\r\n\r\nuseEffect(() => {\r\n  if (!alljobref.current) return;\r\n\r\n  let filtered = [...alljobref.current];\r\n\r\n  // ✅ Filter by city\r\n  if (filters.city !== \"ALL\") {\r\n    filtered = filtered.filter(\r\n      (job) => job.location.toLowerCase() === filters.city.toLowerCase()\r\n    );\r\n  }\r\n\r\n  // ✅ Filter by role\r\n  if (filters.role !== \"ALL\") {\r\n    const keyword = filters.role.split(\" \")[0].toLowerCase();\r\n    filtered = filtered.filter((job) =>\r\n      job.title.toLowerCase().includes(keyword)\r\n    );\r\n  }\r\n\r\n  // ✅ Filter by salary\r\n  if (filters.salary !== \"ALL\") {\r\n    const numeric = parseInt(filters.salary.split(\"-\")[0].split(\"+\")[0]);\r\n    if (!isNaN(numeric)) {\r\n      filtered = filtered.filter((job) => job.salary >= numeric);\r\n    }\r\n  }\r\n\r\n  setgetalljob(filtered);\r\n}, [filters]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchdata();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex w-full h-[80%] border-black mt-4 box-border p-0\">\r\n      <div className=\"w-1/6 h-full ml-6 p-4\">\r\n        <h2 className=\"font-bold border-b-2 border-gray-300\">Filter Data</h2>\r\n        <div className=\"mt-4\">\r\n          <h3 className=\"font-bold\">Cities</h3>\r\n          {metroCities.map((mt, idx) => (\r\n            <div key={idx} className=\"border-black pb-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"city\"\r\n                id={`city-${idx}`}\r\n                value={mt}\r\n                onClick={() => updateFilter(\"city\", mt)}\r\n              />\r\n              <label className=\"font-semibold\" htmlFor={`city-${idx}`}>{mt}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <h3 className=\"font-bold\">Industries</h3>\r\n          {industries.map((industry, idx) => (\r\n            <div key={idx} className=\"border-black pb-2 font-sans\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"industry\"\r\n                id={`industry-${idx}`}\r\n                value={industry}\r\n                onClick={() => updateFilter(\"role\", industry)}\r\n              />\r\n              <label className=\"font-semibold\" htmlFor={`industry-${idx}`}>{industry}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <h3 className=\"font-bold\">Salary Range</h3>\r\n          {salaryRanges.map((salary, idx) => (\r\n            <div key={idx} className=\"border-black pb-2\">\r\n              <input\r\n                type=\"radio\"\r\n                name=\"salary\"\r\n                id={`salary-${idx}`}\r\n                value={salary}\r\n                onClick={() => updateFilter(\"salary\", salary)}\r\n              />\r\n              <label className=\"font-semibold\" htmlFor={`salary-${idx}`}>{salary}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"w-5/6 h-full flex flex-wrap justify-between\">\r\n        {getalljob.length === 0 ? (\r\n          jobcard.map((jb, idx) => (\r\n            <Job_jobcard key={idx} />\r\n          ))\r\n        ) : (\r\n          getalljob.map((jb, idx) => (\r\n            <Job_jobcard key={jb._id} data={jb} />\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Jobs;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Job_jobcard = ({ data }) => {\r\n  const daysago = (mongodbtime) => {\r\n    return Math.floor((new Date() - new Date(mongodbtime)) / (24 * 60 * 60 * 1000));\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-[auto] w-[300px] border-2 border-gray-200 shadow-md rounded-md p-2\">\r\n      <div className=\"flex justify-between items-center mb-2\">\r\n        <div className=\"text-gray-600 text-xs font-medium\">\r\n          {daysago(data?.createdAt) === 0 ? \"Today\" : `${daysago(data?.createdAt)} Days ago`}\r\n        </div>\r\n        <div className=\"text-gray-600\">\r\n          <img \r\n            className=\"h-4 w-4 fill-current\" \r\n            src=\"https://path/to/your/image.png\" \r\n            alt=\"Icon\" \r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"flex gap-2 items-center mb-2\">\r\n        <div>\r\n          <img className=\"w-8 h-8 rounded-md border-2 border-gray-200 object-contain\" src= { `${data?.company?.logo}` }alt=\"Company Logo\" />\r\n        </div>\r\n        <div className=\"flex flex-col items-start\">\r\n          <h1 className=\"text-lg font-semibold\">{data?.company?.name}</h1>\r\n          <h2 className=\"text-gray-400 text-sm\">India</h2>\r\n        </div>\r\n      </div>\r\n      <h3 className=\"mt-1 font-bold text-sm\">{data?.title}</h3>\r\n      <p className=\"mt-1 text-gray-500 text-sm\">\r\n        Design and maintain server-side logic and database management systems.\r\n      </p>\r\n      <div className=\"flex justify-between my-2 text-xs\">\r\n        <span className=\"text-blue-800 font-bold px-1 py-0.5 rounded\">{data?.noofposition}</span>\r\n        <span className=\"text-red-600 font-bold px-1 py-0.5 rounded\">{data?.jobType}</span>\r\n        <span className=\"text-[#683ac2] font-bold px-1 py-0.5 rounded\">{data?.salary} LPA</span>\r\n      </div>\r\n      <div className=\"flex justify-evenly mt-2\">\r\n        <Link to={`/Details/${data?._id}`}>\r\n          <button type=\"button\" className=\"text-gray-900 bg-white border border-gray-300 hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 rounded-lg text-xs px-4 py-1 font-semibold\">\r\n            Details\r\n          </button>\r\n        </Link>\r\n        <button type=\"button\" className=\"bg-[#683ac2] border border-gray-300 hover:bg-[#683ac2] focus:ring-4 focus:ring-gray-100 rounded-lg text-xs px-4 py-1 font-semibold text-white\">\r\n          Save for Later\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Job_jobcard;\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","value","$82e98543711ca9e0$export$2e2bcd8739ae039","$ayMG0","$Bhtkb","$acw62","$fmRoT","getalljob","setgetalljob","useState","alljobref","useRef","fetchdata","result","default","withCredentials","data","current","error","console","log","filters","setFilters","city","role","salary","updateFilter","type","prev","useEffect","filtered","filter","job","location","toLowerCase","keyword","split","title","includes","numeric","parseInt","isNaN","jsxs","className","children","jsx","metroCities","map","mt","idx","name","id","onClick","htmlFor","industries","industry","salaryRanges","length","jobcard","jb","_id","$0701026300ee4dab$export$2e2bcd8739ae039","$lzNIT","daysago","mongodbtime","Math","floor","Date","createdAt","src","alt","company","logo","noofposition","jobType","Link","to"],"version":3,"file":"Jobs.component.d60fec07.js.map"}
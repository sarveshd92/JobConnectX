{"mappings":"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","sources":["<anon>","node_modules/socket.io-client/build/esm/index.js","node_modules/socket.io-client/build/esm/url.js","node_modules/engine.io-client/build/esm/index.js","node_modules/engine.io-client/build/esm/socket.js","node_modules/engine.io-client/build/esm/transports/index.js","node_modules/engine.io-client/build/esm/transports/polling-xhr.js","node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/engine.io-client/build/esm/transport.js","node_modules/engine.io-parser/build/esm/index.js","node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/engine.io-parser/build/esm/commons.js","node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/@socket.io/component-emitter/lib/esm/index.js","node_modules/engine.io-client/build/esm/util.js","node_modules/engine.io-client/build/esm/globals.js","node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/engine.io-client/build/esm/transports/webtransport.js","node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/engine.io-client/build/esm/transports/polling-fetch.js","node_modules/socket.io-client/build/esm/manager.js","node_modules/socket.io-client/build/esm/socket.js","node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io-client/build/esm/on.js","node_modules/socket.io-client/build/esm/contrib/backo2.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"73MNt\", function(module, exports) {\n\n$parcel$export(module.exports, \"io\", () => $523eaa49d3f99bf8$export$841407ceb083bd74);\n\nvar $kATNo = parcelRequire(\"kATNo\");\n\nvar $fL4YY = parcelRequire(\"fL4YY\");\n\nvar $lGX0c = parcelRequire(\"lGX0c\");\n\nvar $2BjQv = parcelRequire(\"2BjQv\");\nparcelRequire(\"1XKMK\");\nvar $i3KZp = parcelRequire(\"i3KZp\");\nvar $3W81j = parcelRequire(\"3W81j\");\nvar $dhyBt = parcelRequire(\"dhyBt\");\nvar $hJTtX = parcelRequire(\"hJTtX\");\n/**\n * Managers cache.\n */ const $523eaa49d3f99bf8$var$cache = {};\nfunction $523eaa49d3f99bf8$export$841407ceb083bd74(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = (0, $kATNo.url)(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = $523eaa49d3f99bf8$var$cache[id] && path in $523eaa49d3f99bf8$var$cache[id][\"nsps\"];\n    const newConnection = opts.forceNew || opts[\"force new connection\"] || false === opts.multiplex || sameNamespace;\n    let io;\n    if (newConnection) io = new (0, $fL4YY.Manager)(source, opts);\n    else {\n        if (!$523eaa49d3f99bf8$var$cache[id]) $523eaa49d3f99bf8$var$cache[id] = new (0, $fL4YY.Manager)(source, opts);\n        io = $523eaa49d3f99bf8$var$cache[id];\n    }\n    if (parsed.query && !opts.query) opts.query = parsed.queryKey;\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign($523eaa49d3f99bf8$export$841407ceb083bd74, {\n    Manager: $fL4YY.Manager,\n    Socket: $lGX0c.Socket,\n    io: $523eaa49d3f99bf8$export$841407ceb083bd74,\n    connect: $523eaa49d3f99bf8$export$841407ceb083bd74\n});\n\n});\nparcelRegister(\"kATNo\", function(module, exports) {\n\n$parcel$export(module.exports, \"url\", () => $efe27346e00da8a8$export$128fa18b7194ef);\nparcelRequire(\"1XKMK\");\nvar $l7wSz = parcelRequire(\"l7wSz\");\nfunction $efe27346e00da8a8$export$128fa18b7194ef(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || typeof location !== \"undefined\" && location;\n    if (null == uri) uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) uri = loc.protocol + uri;\n            else uri = loc.host + uri;\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) uri = loc.protocol + \"//\" + uri;\n            else uri = \"https://\" + uri;\n        }\n        // parse\n        obj = (0, $l7wSz.parse)(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) obj.port = \"80\";\n        else if (/^(http|ws)s$/.test(obj.protocol)) obj.port = \"443\";\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href = obj.protocol + \"://\" + host + (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n\n});\nparcelRegister(\"1XKMK\", function(module, exports) {\n\n$parcel$export(module.exports, \"Socket\", () => (parcelRequire(\"al9N3\")).Socket);\n$parcel$export(module.exports, \"installTimerFunctions\", () => (parcelRequire(\"5vwdc\")).installTimerFunctions);\n$parcel$export(module.exports, \"parse\", () => (parcelRequire(\"l7wSz\")).parse);\n$parcel$export(module.exports, \"nextTick\", () => (parcelRequire(\"bN72v\")).nextTick);\n\nvar $al9N3 = parcelRequire(\"al9N3\");\n\nvar $6opKi = parcelRequire(\"6opKi\");\n\nvar $gEtm1 = parcelRequire(\"gEtm1\");\n\nvar $5vwdc = parcelRequire(\"5vwdc\");\n\nvar $l7wSz = parcelRequire(\"l7wSz\");\n\nvar $bN72v = parcelRequire(\"bN72v\");\n\nvar $i3KZp = parcelRequire(\"i3KZp\");\n\nvar $3W81j = parcelRequire(\"3W81j\");\n\nvar $3W81j = parcelRequire(\"3W81j\");\n\nvar $dhyBt = parcelRequire(\"dhyBt\");\n\nvar $dhyBt = parcelRequire(\"dhyBt\");\n\nvar $hJTtX = parcelRequire(\"hJTtX\");\nconst $16df97babd1aadf1$export$a51d6b395ff4c65a = (0, $al9N3.Socket).protocol;\n\n});\nparcelRegister(\"al9N3\", function(module, exports) {\n\n$parcel$export(module.exports, \"Socket\", () => $787375aed2c43820$export$4798917dbf149b79);\n\nvar $gEtm1 = parcelRequire(\"gEtm1\");\n\nvar $5vwdc = parcelRequire(\"5vwdc\");\n\nvar $2buxl = parcelRequire(\"2buxl\");\n\nvar $l7wSz = parcelRequire(\"l7wSz\");\n\nvar $5hHAH = parcelRequire(\"5hHAH\");\n\nvar $CnWUo = parcelRequire(\"CnWUo\");\n\nvar $bN72v = parcelRequire(\"bN72v\");\nconst $787375aed2c43820$var$withEventListeners = typeof addEventListener === \"function\" && typeof removeEventListener === \"function\";\nconst $787375aed2c43820$var$OFFLINE_EVENT_LISTENERS = [];\nif ($787375aed2c43820$var$withEventListeners) // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n// script, so we create one single event listener here which will forward the event to the socket instances\naddEventListener(\"offline\", ()=>{\n    $787375aed2c43820$var$OFFLINE_EVENT_LISTENERS.forEach((listener)=>listener());\n}, false);\nclass $787375aed2c43820$export$3874118029a0ee0d extends (0, $5hHAH.Emitter) {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */ constructor(uri, opts){\n        super();\n        this.binaryType = (0, $bN72v.defaultBinaryType);\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */ this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = (0, $l7wSz.parse)(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure = parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query) opts.query = parsedUri.query;\n        } else if (opts.host) opts.hostname = (0, $l7wSz.parse)(opts.host).host;\n        (0, $5vwdc.installTimerFunctions)(this, opts);\n        this.secure = null != opts.secure ? opts.secure : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) // if no port is specified manually, use the protocol default\n        opts.port = this.secure ? \"443\" : \"80\";\n        this.hostname = opts.hostname || (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port = opts.port || (typeof location !== \"undefined\" && location.port ? location.port : this.secure ? \"443\" : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t)=>{\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") this.opts.query = (0, $2buxl.decode)(this.opts.query);\n        if ($787375aed2c43820$var$withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = ()=>{\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = ()=>{\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                $787375aed2c43820$var$OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) this._cookieJar = (0, $bN72v.createCookieJar)();\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */ createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = (0, $CnWUo.protocol);\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id) query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query: query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */ _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(()=>{\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade && $787375aed2c43820$export$3874118029a0ee0d.priorWebsocketSuccess && this.transports.indexOf(\"websocket\") !== -1 ? \"websocket\" : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */ setTransport(transport) {\n        if (this.transport) this.transport.removeAllListeners();\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport.on(\"drain\", this._onDrain.bind(this)).on(\"packet\", this._onPacket.bind(this)).on(\"error\", this._onError.bind(this)).on(\"close\", (reason)=>this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */ onOpen() {\n        this.readyState = \"open\";\n        $787375aed2c43820$export$3874118029a0ee0d.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */ _onPacket(packet) {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState || \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch(packet.type){\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */ onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState) return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */ _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(()=>{\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) this._pingTimeoutTimer.unref();\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */ _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) this.emitReserved(\"drain\");\n        else this.flush();\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */ flush() {\n        if (\"closed\" !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */ _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload && this.transport.name === \"polling\" && this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) return this.writeBuffer;\n        let payloadSize = 1; // first packet type\n        for(let i = 0; i < this.writeBuffer.length; i++){\n            const data = this.writeBuffer[i].data;\n            if (data) payloadSize += (0, $5vwdc.byteLength)(data);\n            if (i > 0 && payloadSize > this._maxPayload) return this.writeBuffer.slice(0, i);\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */ /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime) return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            (0, $bN72v.nextTick)(()=>{\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */ write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */ send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */ _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) return;\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn) this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */ close() {\n        const close = ()=>{\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = ()=>{\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = ()=>{\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) this.once(\"drain\", ()=>{\n                if (this.upgrading) waitForUpgrade();\n                else close();\n            });\n            else if (this.upgrading) waitForUpgrade();\n            else close();\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */ _onError(err) {\n        $787375aed2c43820$export$3874118029a0ee0d.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports && this.transports.length > 1 && this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */ _onClose(reason, description) {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState || \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if ($787375aed2c43820$var$withEventListeners) {\n                if (this._beforeunloadEventListener) removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                if (this._offlineEventListener) {\n                    const i = $787375aed2c43820$var$OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) $787375aed2c43820$var$OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\n$787375aed2c43820$export$3874118029a0ee0d.protocol = (0, $CnWUo.protocol);\nclass $787375aed2c43820$export$cc521fcb1004e85c extends $787375aed2c43820$export$3874118029a0ee0d {\n    constructor(){\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) for(let i = 0; i < this._upgrades.length; i++)this._probe(this._upgrades[i]);\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */ _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        $787375aed2c43820$export$3874118029a0ee0d.priorWebsocketSuccess = false;\n        const onTransportOpen = ()=>{\n            if (failed) return;\n            transport.send([\n                {\n                    type: \"ping\",\n                    data: \"probe\"\n                }\n            ]);\n            transport.once(\"packet\", (msg)=>{\n                if (failed) return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport) return;\n                    $787375aed2c43820$export$3874118029a0ee0d.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(()=>{\n                        if (failed) return;\n                        if (\"closed\" === this.readyState) return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([\n                            {\n                                type: \"upgrade\"\n                            }\n                        ]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                } else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed) return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err)=>{\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) freezeTransport();\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = ()=>{\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 && name !== \"webtransport\") // favor WebTransport\n        this.setTimeoutFn(()=>{\n            if (!failed) transport.open();\n        }, 200);\n        else transport.open();\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */ _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for(let i = 0; i < upgrades.length; i++)if (~this.transports.indexOf(upgrades[i])) filteredUpgrades.push(upgrades[i]);\n        return filteredUpgrades;\n    }\n}\nclass $787375aed2c43820$export$4798917dbf149b79 extends $787375aed2c43820$export$cc521fcb1004e85c {\n    constructor(uri, opts = {}){\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports || o.transports && typeof o.transports[0] === \"string\") o.transports = (o.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\"\n        ]).map((transportName)=>(0, $gEtm1.transports)[transportName]).filter((t)=>!!t);\n        super(uri, o);\n    }\n}\n\n});\nparcelRegister(\"gEtm1\", function(module, exports) {\n\n$parcel$export(module.exports, \"transports\", () => $c1f726e793763466$export$46dec00755c1153b);\n\nvar $3W81j = parcelRequire(\"3W81j\");\n\nvar $dhyBt = parcelRequire(\"dhyBt\");\n\nvar $hJTtX = parcelRequire(\"hJTtX\");\nconst $c1f726e793763466$export$46dec00755c1153b = {\n    websocket: (0, $dhyBt.WS),\n    webtransport: (0, $hJTtX.WT),\n    polling: (0, $3W81j.XHR)\n};\n\n});\nparcelRegister(\"3W81j\", function(module, exports) {\n\n$parcel$export(module.exports, \"XHR\", () => $2ddd02863faa1587$export$a2d42eb087c10497);\n\nvar $7pvuz = parcelRequire(\"7pvuz\");\n\nvar $5hHAH = parcelRequire(\"5hHAH\");\n\nvar $5vwdc = parcelRequire(\"5vwdc\");\n\nvar $bN72v = parcelRequire(\"bN72v\");\n\nvar $kxvpX = parcelRequire(\"kxvpX\");\nfunction $2ddd02863faa1587$var$empty() {}\nclass $2ddd02863faa1587$export$c959f2344155d309 extends (0, $7pvuz.Polling) {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */ constructor(opts){\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) port = isSSL ? \"443\" : \"80\";\n            this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */ doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context)=>{\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */ doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context)=>{\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nclass $2ddd02863faa1587$export$7fa6c5b6f8193917 extends (0, $5hHAH.Emitter) {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */ constructor(createRequest, uri, opts){\n        super();\n        this.createRequest = createRequest;\n        (0, $5vwdc.installTimerFunctions)(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */ _create() {\n        var _a;\n        const opts = (0, $5vwdc.pick)(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = this._xhr = this.createRequest(opts);\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for(let i in this._opts.extraHeaders)if (this._opts.extraHeaders.hasOwnProperty(i)) xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                }\n            } catch (e) {}\n            if (\"POST\" === this._method) try {\n                xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n            } catch (e) {}\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            } catch (e) {}\n            (_a = this._opts.cookieJar) === null || _a === void 0 || _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) xhr.withCredentials = this._opts.withCredentials;\n            if (this._opts.requestTimeout) xhr.timeout = this._opts.requestTimeout;\n            xhr.onreadystatechange = ()=>{\n                var _a;\n                if (xhr.readyState === 3) (_a = this._opts.cookieJar) === null || _a === void 0 || _a.parseCookies(// @ts-ignore\n                xhr.getResponseHeader(\"set-cookie\"));\n                if (4 !== xhr.readyState) return;\n                if (200 === xhr.status || 1223 === xhr.status) this._onLoad();\n                else // make sure the `error` event handler that's user-set\n                // does not throw in the same tick and gets caught here\n                this.setTimeoutFn(()=>{\n                    this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                }, 0);\n            };\n            xhr.send(this._data);\n        } catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(()=>{\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = $2ddd02863faa1587$export$7fa6c5b6f8193917.requestsCount++;\n            $2ddd02863faa1587$export$7fa6c5b6f8193917.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */ _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */ _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) return;\n        this._xhr.onreadystatechange = $2ddd02863faa1587$var$empty;\n        if (fromError) try {\n            this._xhr.abort();\n        } catch (e) {}\n        if (typeof document !== \"undefined\") delete $2ddd02863faa1587$export$7fa6c5b6f8193917.requests[this._index];\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */ _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */ abort() {\n        this._cleanup();\n    }\n}\n$2ddd02863faa1587$export$7fa6c5b6f8193917.requestsCount = 0;\n$2ddd02863faa1587$export$7fa6c5b6f8193917.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */ if (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") // @ts-ignore\n    attachEvent(\"onunload\", $2ddd02863faa1587$var$unloadHandler);\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in (0, $bN72v.globalThisShim) ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, $2ddd02863faa1587$var$unloadHandler, false);\n    }\n}\nfunction $2ddd02863faa1587$var$unloadHandler() {\n    for(let i in $2ddd02863faa1587$export$7fa6c5b6f8193917.requests)if ($2ddd02863faa1587$export$7fa6c5b6f8193917.requests.hasOwnProperty(i)) $2ddd02863faa1587$export$7fa6c5b6f8193917.requests[i].abort();\n}\nconst $2ddd02863faa1587$var$hasXHR2 = function() {\n    const xhr = $2ddd02863faa1587$var$newRequest({\n        xdomain: false\n    });\n    return xhr && xhr.responseType !== null;\n}();\nclass $2ddd02863faa1587$export$a2d42eb087c10497 extends $2ddd02863faa1587$export$c959f2344155d309 {\n    constructor(opts){\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = $2ddd02863faa1587$var$hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, {\n            xd: this.xd\n        }, this.opts);\n        return new $2ddd02863faa1587$export$7fa6c5b6f8193917($2ddd02863faa1587$var$newRequest, this.uri(), opts);\n    }\n}\nfunction $2ddd02863faa1587$var$newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || (0, $kxvpX.hasCORS))) return new XMLHttpRequest();\n    } catch (e) {}\n    if (!xdomain) try {\n        return new (0, $bN72v.globalThisShim)[[\n            \"Active\"\n        ].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n    } catch (e) {}\n}\n\n});\nparcelRegister(\"7pvuz\", function(module, exports) {\n\n$parcel$export(module.exports, \"Polling\", () => $56534be56e5aa809$export$265ee5eefd4c309b);\n\nvar $6opKi = parcelRequire(\"6opKi\");\n\nvar $5vwdc = parcelRequire(\"5vwdc\");\n\nvar $CnWUo = parcelRequire(\"CnWUo\");\nclass $56534be56e5aa809$export$265ee5eefd4c309b extends (0, $6opKi.Transport) {\n    constructor(){\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */ doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */ pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = ()=>{\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function() {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function() {\n                    --total || pause();\n                });\n            }\n        } else pause();\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */ _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */ onData(data) {\n        const callback = (packet)=>{\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") this.onOpen();\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({\n                    description: \"transport closed by the server\"\n                });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        (0, $CnWUo.decodePayload)(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) this._poll();\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */ doClose() {\n        const close = ()=>{\n            this.write([\n                {\n                    type: \"close\"\n                }\n            ]);\n        };\n        if (\"open\" === this.readyState) close();\n        else // in case we're trying to close while\n        // handshaking is in progress (GH-164)\n        this.once(\"open\", close);\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */ write(packets) {\n        this.writable = false;\n        (0, $CnWUo.encodePayload)(packets, (data)=>{\n            this.doWrite(data, ()=>{\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */ uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) query[this.opts.timestampParam] = (0, $5vwdc.randomString)();\n        if (!this.supportsBinary && !query.sid) query.b64 = 1;\n        return this.createUri(schema, query);\n    }\n}\n\n});\nparcelRegister(\"6opKi\", function(module, exports) {\n\n$parcel$export(module.exports, \"Transport\", () => $4a78f487f5bb98d8$export$86495b081fef8e52);\nparcelRequire(\"CnWUo\");\nvar $ezyGD = parcelRequire(\"ezyGD\");\n\nvar $5hHAH = parcelRequire(\"5hHAH\");\n\nvar $5vwdc = parcelRequire(\"5vwdc\");\n\nvar $2buxl = parcelRequire(\"2buxl\");\nclass $4a78f487f5bb98d8$export$8e68de6fb26f2236 extends Error {\n    constructor(reason, description, context){\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nclass $4a78f487f5bb98d8$export$86495b081fef8e52 extends (0, $5hHAH.Emitter) {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */ constructor(opts){\n        super();\n        this.writable = false;\n        (0, $5vwdc.installTimerFunctions)(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */ onError(reason, description, context) {\n        super.emitReserved(\"error\", new $4a78f487f5bb98d8$export$8e68de6fb26f2236(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */ open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */ close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */ send(packets) {\n        if (this.readyState === \"open\") this.write(packets);\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */ onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */ onData(data) {\n        const packet = (0, $ezyGD.decodePacket)(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */ onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */ onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */ pause(onPause) {}\n    createUri(schema, query = {}) {\n        return schema + \"://\" + this._hostname() + this._port() + this.opts.path + this._query(query);\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port && (this.opts.secure && Number(this.opts.port !== 443) || !this.opts.secure && Number(this.opts.port) !== 80)) return \":\" + this.opts.port;\n        else return \"\";\n    }\n    _query(query) {\n        const encodedQuery = (0, $2buxl.encode)(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n\n});\nparcelRegister(\"CnWUo\", function(module, exports) {\n\n$parcel$export(module.exports, \"encodePayload\", () => $0736208648dc8bae$export$144d64fe58dad441);\n$parcel$export(module.exports, \"decodePayload\", () => $0736208648dc8bae$export$d10cc2e7f7566a2d);\n$parcel$export(module.exports, \"createPacketEncoderStream\", () => $0736208648dc8bae$export$a525fb718e9c623a);\n$parcel$export(module.exports, \"createPacketDecoderStream\", () => $0736208648dc8bae$export$552d20aac7500f47);\n$parcel$export(module.exports, \"protocol\", () => $0736208648dc8bae$export$a51d6b395ff4c65a);\n$parcel$export(module.exports, \"encodePacket\", () => (parcelRequire(\"bRHuL\")).encodePacket);\n$parcel$export(module.exports, \"decodePacket\", () => (parcelRequire(\"ezyGD\")).decodePacket);\n\nvar $bRHuL = parcelRequire(\"bRHuL\");\n\nvar $ezyGD = parcelRequire(\"ezyGD\");\n\nvar $fsDlh = parcelRequire(\"fsDlh\");\nconst $0736208648dc8bae$var$SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst $0736208648dc8bae$export$144d64fe58dad441 = (packets, callback)=>{\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i)=>{\n        // force base64 encoding for binary packets\n        (0, $bRHuL.encodePacket)(packet, false, (encodedPacket)=>{\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) callback(encodedPackets.join($0736208648dc8bae$var$SEPARATOR));\n        });\n    });\n};\nconst $0736208648dc8bae$export$d10cc2e7f7566a2d = (encodedPayload, binaryType)=>{\n    const encodedPackets = encodedPayload.split($0736208648dc8bae$var$SEPARATOR);\n    const packets = [];\n    for(let i = 0; i < encodedPackets.length; i++){\n        const decodedPacket = (0, $ezyGD.decodePacket)(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") break;\n    }\n    return packets;\n};\nfunction $0736208648dc8bae$export$a525fb718e9c623a() {\n    return new TransformStream({\n        transform (packet, controller) {\n            (0, $bRHuL.encodePacketToBinary)(packet, (encodedPacket)=>{\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                } else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                } else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") header[0] |= 0x80;\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet $0736208648dc8bae$var$TEXT_DECODER;\nfunction $0736208648dc8bae$var$totalLength(chunks) {\n    return chunks.reduce((acc, chunk)=>acc + chunk.length, 0);\n}\nfunction $0736208648dc8bae$var$concatChunks(chunks, size) {\n    if (chunks[0].length === size) return chunks.shift();\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for(let i = 0; i < size; i++){\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) chunks[0] = chunks[0].slice(j);\n    return buffer;\n}\nfunction $0736208648dc8bae$export$552d20aac7500f47(maxPayload, binaryType) {\n    if (!$0736208648dc8bae$var$TEXT_DECODER) $0736208648dc8bae$var$TEXT_DECODER = new TextDecoder();\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */ ;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform (chunk, controller) {\n            chunks.push(chunk);\n            while(true){\n                if (state === 0 /* State.READ_HEADER */ ) {\n                    if ($0736208648dc8bae$var$totalLength(chunks) < 1) break;\n                    const header = $0736208648dc8bae$var$concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) state = 3 /* State.READ_PAYLOAD */ ;\n                    else if (expectedLength === 126) state = 1 /* State.READ_EXTENDED_LENGTH_16 */ ;\n                    else state = 2 /* State.READ_EXTENDED_LENGTH_64 */ ;\n                } else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */ ) {\n                    if ($0736208648dc8bae$var$totalLength(chunks) < 2) break;\n                    const headerArray = $0736208648dc8bae$var$concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */ ;\n                } else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */ ) {\n                    if ($0736208648dc8bae$var$totalLength(chunks) < 8) break;\n                    const headerArray = $0736208648dc8bae$var$concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 21) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue((0, $fsDlh.ERROR_PACKET));\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */ ;\n                } else {\n                    if ($0736208648dc8bae$var$totalLength(chunks) < expectedLength) break;\n                    const data = $0736208648dc8bae$var$concatChunks(chunks, expectedLength);\n                    controller.enqueue((0, $ezyGD.decodePacket)(isBinary ? data : $0736208648dc8bae$var$TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */ ;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue((0, $fsDlh.ERROR_PACKET));\n                    break;\n                }\n            }\n        }\n    });\n}\nconst $0736208648dc8bae$export$a51d6b395ff4c65a = 4;\n\n});\nparcelRegister(\"bRHuL\", function(module, exports) {\n\n$parcel$export(module.exports, \"encodePacket\", () => $8a3662315a48cdbd$export$57852049361a8e62);\n$parcel$export(module.exports, \"encodePacketToBinary\", () => $8a3662315a48cdbd$export$ec0c9b9013ee0ef5);\n\nvar $fsDlh = parcelRequire(\"fsDlh\");\nconst $8a3662315a48cdbd$var$withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\";\nconst $8a3662315a48cdbd$var$withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst $8a3662315a48cdbd$var$isView = (obj)=>{\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst $8a3662315a48cdbd$export$57852049361a8e62 = ({ type: type, data: data }, supportsBinary, callback)=>{\n    if ($8a3662315a48cdbd$var$withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) return callback(data);\n        else return $8a3662315a48cdbd$var$encodeBlobAsBase64(data, callback);\n    } else if ($8a3662315a48cdbd$var$withNativeArrayBuffer && (data instanceof ArrayBuffer || $8a3662315a48cdbd$var$isView(data))) {\n        if (supportsBinary) return callback(data);\n        else return $8a3662315a48cdbd$var$encodeBlobAsBase64(new Blob([\n            data\n        ]), callback);\n    }\n    // plain string\n    return callback((0, $fsDlh.PACKET_TYPES)[type] + (data || \"\"));\n};\nconst $8a3662315a48cdbd$var$encodeBlobAsBase64 = (data, callback)=>{\n    const fileReader = new FileReader();\n    fileReader.onload = function() {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction $8a3662315a48cdbd$var$toArray(data) {\n    if (data instanceof Uint8Array) return data;\n    else if (data instanceof ArrayBuffer) return new Uint8Array(data);\n    else return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n}\nlet $8a3662315a48cdbd$var$TEXT_ENCODER;\nfunction $8a3662315a48cdbd$export$ec0c9b9013ee0ef5(packet, callback) {\n    if ($8a3662315a48cdbd$var$withNativeBlob && packet.data instanceof Blob) return packet.data.arrayBuffer().then($8a3662315a48cdbd$var$toArray).then(callback);\n    else if ($8a3662315a48cdbd$var$withNativeArrayBuffer && (packet.data instanceof ArrayBuffer || $8a3662315a48cdbd$var$isView(packet.data))) return callback($8a3662315a48cdbd$var$toArray(packet.data));\n    $8a3662315a48cdbd$export$57852049361a8e62(packet, false, (encoded)=>{\n        if (!$8a3662315a48cdbd$var$TEXT_ENCODER) $8a3662315a48cdbd$var$TEXT_ENCODER = new TextEncoder();\n        callback($8a3662315a48cdbd$var$TEXT_ENCODER.encode(encoded));\n    });\n}\n\n});\nparcelRegister(\"fsDlh\", function(module, exports) {\n\n$parcel$export(module.exports, \"PACKET_TYPES\", () => $b417fd17fc84e4e3$export$c169aefb7330cccb);\n$parcel$export(module.exports, \"PACKET_TYPES_REVERSE\", () => $b417fd17fc84e4e3$export$47791e8004edd485);\n$parcel$export(module.exports, \"ERROR_PACKET\", () => $b417fd17fc84e4e3$export$c718b5840781f8a7);\nconst $b417fd17fc84e4e3$export$c169aefb7330cccb = Object.create(null); // no Map = no polyfill\n$b417fd17fc84e4e3$export$c169aefb7330cccb[\"open\"] = \"0\";\n$b417fd17fc84e4e3$export$c169aefb7330cccb[\"close\"] = \"1\";\n$b417fd17fc84e4e3$export$c169aefb7330cccb[\"ping\"] = \"2\";\n$b417fd17fc84e4e3$export$c169aefb7330cccb[\"pong\"] = \"3\";\n$b417fd17fc84e4e3$export$c169aefb7330cccb[\"message\"] = \"4\";\n$b417fd17fc84e4e3$export$c169aefb7330cccb[\"upgrade\"] = \"5\";\n$b417fd17fc84e4e3$export$c169aefb7330cccb[\"noop\"] = \"6\";\nconst $b417fd17fc84e4e3$export$47791e8004edd485 = Object.create(null);\nObject.keys($b417fd17fc84e4e3$export$c169aefb7330cccb).forEach((key)=>{\n    $b417fd17fc84e4e3$export$47791e8004edd485[$b417fd17fc84e4e3$export$c169aefb7330cccb[key]] = key;\n});\nconst $b417fd17fc84e4e3$export$c718b5840781f8a7 = {\n    type: \"error\",\n    data: \"parser error\"\n};\n\n});\n\n\nparcelRegister(\"ezyGD\", function(module, exports) {\n\n$parcel$export(module.exports, \"decodePacket\", () => $a9bf3da28855a34f$export$4647901878f33f31);\n\nvar $fsDlh = parcelRequire(\"fsDlh\");\n\nvar $aVEkU = parcelRequire(\"aVEkU\");\nconst $a9bf3da28855a34f$var$withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst $a9bf3da28855a34f$export$4647901878f33f31 = (encodedPacket, binaryType)=>{\n    if (typeof encodedPacket !== \"string\") return {\n        type: \"message\",\n        data: $a9bf3da28855a34f$var$mapBinary(encodedPacket, binaryType)\n    };\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") return {\n        type: \"message\",\n        data: $a9bf3da28855a34f$var$decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n    const packetType = (0, $fsDlh.PACKET_TYPES_REVERSE)[type];\n    if (!packetType) return 0, $fsDlh.ERROR_PACKET;\n    return encodedPacket.length > 1 ? {\n        type: (0, $fsDlh.PACKET_TYPES_REVERSE)[type],\n        data: encodedPacket.substring(1)\n    } : {\n        type: (0, $fsDlh.PACKET_TYPES_REVERSE)[type]\n    };\n};\nconst $a9bf3da28855a34f$var$decodeBase64Packet = (data, binaryType)=>{\n    if ($a9bf3da28855a34f$var$withNativeArrayBuffer) {\n        const decoded = (0, $aVEkU.decode)(data);\n        return $a9bf3da28855a34f$var$mapBinary(decoded, binaryType);\n    } else return {\n        base64: true,\n        data: data\n    }; // fallback for old browsers\n};\nconst $a9bf3da28855a34f$var$mapBinary = (data, binaryType)=>{\n    switch(binaryType){\n        case \"blob\":\n            if (data instanceof Blob) // from WebSocket + binaryType \"blob\"\n            return data;\n            else // from HTTP long-polling or WebTransport\n            return new Blob([\n                data\n            ]);\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n            return data;\n            else // from WebTransport (Uint8Array)\n            return data.buffer;\n    }\n};\n\n});\nparcelRegister(\"aVEkU\", function(module, exports) {\n\n$parcel$export(module.exports, \"decode\", () => $7f4e842ae29bcbc5$export$2f872c0f2117be69);\n// imported from https://github.com/socketio/base64-arraybuffer\nconst $7f4e842ae29bcbc5$var$chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst $7f4e842ae29bcbc5$var$lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor(let i = 0; i < $7f4e842ae29bcbc5$var$chars.length; i++)$7f4e842ae29bcbc5$var$lookup[$7f4e842ae29bcbc5$var$chars.charCodeAt(i)] = i;\nconst $7f4e842ae29bcbc5$export$c564cdbbe6da493 = (arraybuffer)=>{\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for(i = 0; i < len; i += 3){\n        base64 += $7f4e842ae29bcbc5$var$chars[bytes[i] >> 2];\n        base64 += $7f4e842ae29bcbc5$var$chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64 += $7f4e842ae29bcbc5$var$chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64 += $7f4e842ae29bcbc5$var$chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) base64 = base64.substring(0, base64.length - 1) + '=';\n    else if (len % 3 === 1) base64 = base64.substring(0, base64.length - 2) + '==';\n    return base64;\n};\nconst $7f4e842ae29bcbc5$export$2f872c0f2117be69 = (base64)=>{\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') bufferLength--;\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for(i = 0; i < len; i += 4){\n        encoded1 = $7f4e842ae29bcbc5$var$lookup[base64.charCodeAt(i)];\n        encoded2 = $7f4e842ae29bcbc5$var$lookup[base64.charCodeAt(i + 1)];\n        encoded3 = $7f4e842ae29bcbc5$var$lookup[base64.charCodeAt(i + 2)];\n        encoded4 = $7f4e842ae29bcbc5$var$lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return arraybuffer;\n};\n\n});\n\n\n\nparcelRegister(\"5hHAH\", function(module, exports) {\n\n$parcel$export(module.exports, \"Emitter\", () => $3d905a8ca243a015$export$4293555f241ae35a);\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */ function $3d905a8ca243a015$export$4293555f241ae35a(obj) {\n    if (obj) return $3d905a8ca243a015$var$mixin(obj);\n}\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */ function $3d905a8ca243a015$var$mixin(obj) {\n    for(var key in $3d905a8ca243a015$export$4293555f241ae35a.prototype)obj[key] = $3d905a8ca243a015$export$4293555f241ae35a.prototype[key];\n    return obj;\n}\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */ $3d905a8ca243a015$export$4293555f241ae35a.prototype.on = $3d905a8ca243a015$export$4293555f241ae35a.prototype.addEventListener = function(event, fn) {\n    this._callbacks = this._callbacks || {};\n    (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n    return this;\n};\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */ $3d905a8ca243a015$export$4293555f241ae35a.prototype.once = function(event, fn) {\n    function on() {\n        this.off(event, on);\n        fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.on(event, on);\n    return this;\n};\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */ $3d905a8ca243a015$export$4293555f241ae35a.prototype.off = $3d905a8ca243a015$export$4293555f241ae35a.prototype.removeListener = $3d905a8ca243a015$export$4293555f241ae35a.prototype.removeAllListeners = $3d905a8ca243a015$export$4293555f241ae35a.prototype.removeEventListener = function(event, fn) {\n    this._callbacks = this._callbacks || {};\n    // all\n    if (0 == arguments.length) {\n        this._callbacks = {};\n        return this;\n    }\n    // specific event\n    var callbacks = this._callbacks['$' + event];\n    if (!callbacks) return this;\n    // remove all handlers\n    if (1 == arguments.length) {\n        delete this._callbacks['$' + event];\n        return this;\n    }\n    // remove specific handler\n    var cb;\n    for(var i = 0; i < callbacks.length; i++){\n        cb = callbacks[i];\n        if (cb === fn || cb.fn === fn) {\n            callbacks.splice(i, 1);\n            break;\n        }\n    }\n    // Remove event specific arrays for event types that no\n    // one is subscribed for to avoid memory leak.\n    if (callbacks.length === 0) delete this._callbacks['$' + event];\n    return this;\n};\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */ $3d905a8ca243a015$export$4293555f241ae35a.prototype.emit = function(event) {\n    this._callbacks = this._callbacks || {};\n    var args = new Array(arguments.length - 1), callbacks = this._callbacks['$' + event];\n    for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];\n    if (callbacks) {\n        callbacks = callbacks.slice(0);\n        for(var i = 0, len = callbacks.length; i < len; ++i)callbacks[i].apply(this, args);\n    }\n    return this;\n};\n// alias used for reserved events (protected method)\n$3d905a8ca243a015$export$4293555f241ae35a.prototype.emitReserved = $3d905a8ca243a015$export$4293555f241ae35a.prototype.emit;\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */ $3d905a8ca243a015$export$4293555f241ae35a.prototype.listeners = function(event) {\n    this._callbacks = this._callbacks || {};\n    return this._callbacks['$' + event] || [];\n};\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */ $3d905a8ca243a015$export$4293555f241ae35a.prototype.hasListeners = function(event) {\n    return !!this.listeners(event).length;\n};\n\n});\n\nparcelRegister(\"5vwdc\", function(module, exports) {\n\n$parcel$export(module.exports, \"pick\", () => $4028d5a20a4526d1$export$357523c63a2253b9);\n$parcel$export(module.exports, \"installTimerFunctions\", () => $4028d5a20a4526d1$export$2f67576668b97183);\n$parcel$export(module.exports, \"byteLength\", () => $4028d5a20a4526d1$export$a48f0734ac7c2329);\n$parcel$export(module.exports, \"randomString\", () => $4028d5a20a4526d1$export$7fa8378418b4411e);\n\nvar $bN72v = parcelRequire(\"bN72v\");\nfunction $4028d5a20a4526d1$export$357523c63a2253b9(obj, ...attr) {\n    return attr.reduce((acc, k)=>{\n        if (obj.hasOwnProperty(k)) acc[k] = obj[k];\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst $4028d5a20a4526d1$var$NATIVE_SET_TIMEOUT = (0, $bN72v.globalThisShim).setTimeout;\nconst $4028d5a20a4526d1$var$NATIVE_CLEAR_TIMEOUT = (0, $bN72v.globalThisShim).clearTimeout;\nfunction $4028d5a20a4526d1$export$2f67576668b97183(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = $4028d5a20a4526d1$var$NATIVE_SET_TIMEOUT.bind((0, $bN72v.globalThisShim));\n        obj.clearTimeoutFn = $4028d5a20a4526d1$var$NATIVE_CLEAR_TIMEOUT.bind((0, $bN72v.globalThisShim));\n    } else {\n        obj.setTimeoutFn = (0, $bN72v.globalThisShim).setTimeout.bind((0, $bN72v.globalThisShim));\n        obj.clearTimeoutFn = (0, $bN72v.globalThisShim).clearTimeout.bind((0, $bN72v.globalThisShim));\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst $4028d5a20a4526d1$var$BASE64_OVERHEAD = 1.33;\nfunction $4028d5a20a4526d1$export$a48f0734ac7c2329(obj) {\n    if (typeof obj === \"string\") return $4028d5a20a4526d1$var$utf8Length(obj);\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * $4028d5a20a4526d1$var$BASE64_OVERHEAD);\n}\nfunction $4028d5a20a4526d1$var$utf8Length(str) {\n    let c = 0, length = 0;\n    for(let i = 0, l = str.length; i < l; i++){\n        c = str.charCodeAt(i);\n        if (c < 0x80) length += 1;\n        else if (c < 0x800) length += 2;\n        else if (c < 0xd800 || c >= 0xe000) length += 3;\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\nfunction $4028d5a20a4526d1$export$7fa8378418b4411e() {\n    return Date.now().toString(36).substring(3) + Math.random().toString(36).substring(2, 5);\n}\n\n});\nparcelRegister(\"bN72v\", function(module, exports) {\n\n$parcel$export(module.exports, \"nextTick\", () => $8959bb304e43f43f$export$bdd553fddd433dcb);\n$parcel$export(module.exports, \"globalThisShim\", () => $8959bb304e43f43f$export$394f9358f6231289);\n$parcel$export(module.exports, \"defaultBinaryType\", () => $8959bb304e43f43f$export$790dcbc41e2d75d5);\n$parcel$export(module.exports, \"createCookieJar\", () => $8959bb304e43f43f$export$19413efcf2fac759);\nconst $8959bb304e43f43f$export$bdd553fddd433dcb = (()=>{\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) return (cb)=>Promise.resolve().then(cb);\n    else return (cb, setTimeoutFn)=>setTimeoutFn(cb, 0);\n})();\nconst $8959bb304e43f43f$export$394f9358f6231289 = (()=>{\n    if (typeof self !== \"undefined\") return self;\n    else if (typeof window !== \"undefined\") return window;\n    else return Function(\"return this\")();\n})();\nconst $8959bb304e43f43f$export$790dcbc41e2d75d5 = \"arraybuffer\";\nfunction $8959bb304e43f43f$export$19413efcf2fac759() {}\n\n});\n\n\nparcelRegister(\"2buxl\", function(module, exports) {\n\n$parcel$export(module.exports, \"encode\", () => $19744bce3c183d10$export$c564cdbbe6da493);\n$parcel$export(module.exports, \"decode\", () => $19744bce3c183d10$export$2f872c0f2117be69);\n// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */ function $19744bce3c183d10$export$c564cdbbe6da493(obj) {\n    let str = '';\n    for(let i in obj)if (obj.hasOwnProperty(i)) {\n        if (str.length) str += '&';\n        str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n    return str;\n}\nfunction $19744bce3c183d10$export$2f872c0f2117be69(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for(let i = 0, l = pairs.length; i < l; i++){\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n\n});\n\n\n\nparcelRegister(\"kxvpX\", function(module, exports) {\n\n$parcel$export(module.exports, \"hasCORS\", () => $ef3f42a25dd224af$export$5235bbd4a1ef06e);\n// imported from https://github.com/component/has-cors\nlet $ef3f42a25dd224af$var$value = false;\ntry {\n    $ef3f42a25dd224af$var$value = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n// if XMLHttp support is disabled in IE then it will throw\n// when trying to create\n}\nconst $ef3f42a25dd224af$export$5235bbd4a1ef06e = $ef3f42a25dd224af$var$value;\n\n});\n\n\nparcelRegister(\"dhyBt\", function(module, exports) {\n\n$parcel$export(module.exports, \"WS\", () => $9ab7b46a38551fa4$export$911baa0677ac404c);\n\nvar $6opKi = parcelRequire(\"6opKi\");\n\nvar $5vwdc = parcelRequire(\"5vwdc\");\nparcelRequire(\"CnWUo\");\nvar $bRHuL = parcelRequire(\"bRHuL\");\n\nvar $bN72v = parcelRequire(\"bN72v\");\n// detect ReactNative environment\nconst $9ab7b46a38551fa4$var$isReactNative = typeof navigator !== \"undefined\" && typeof navigator.product === \"string\" && navigator.product.toLowerCase() === \"reactnative\";\nclass $9ab7b46a38551fa4$export$570bf71d2367e261 extends (0, $6opKi.Transport) {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = $9ab7b46a38551fa4$var$isReactNative ? {} : (0, $5vwdc.pick)(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) opts.headers = this.opts.extraHeaders;\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        } catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */ addEventListeners() {\n        this.ws.onopen = ()=>{\n            if (this.opts.autoUnref) this.ws._socket.unref();\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent)=>this.onClose({\n                description: \"websocket connection closed\",\n                context: closeEvent\n            });\n        this.ws.onmessage = (ev)=>this.onData(ev.data);\n        this.ws.onerror = (e)=>this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for(let i = 0; i < packets.length; i++){\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            (0, $bRHuL.encodePacket)(packet, this.supportsBinary, (data)=>{\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                } catch (e) {}\n                if (lastPacket) // fake drain\n                // defer to next tick to allow Socket to clear writeBuffer\n                (0, $bN72v.nextTick)(()=>{\n                    this.writable = true;\n                    this.emitReserved(\"drain\");\n                }, this.setTimeoutFn);\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = ()=>{};\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */ uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) query[this.opts.timestampParam] = (0, $5vwdc.randomString)();\n        // communicate binary support capabilities\n        if (!this.supportsBinary) query.b64 = 1;\n        return this.createUri(schema, query);\n    }\n}\nconst $9ab7b46a38551fa4$var$WebSocketCtor = (0, $bN72v.globalThisShim).WebSocket || (0, $bN72v.globalThisShim).MozWebSocket;\nclass $9ab7b46a38551fa4$export$911baa0677ac404c extends $9ab7b46a38551fa4$export$570bf71d2367e261 {\n    createSocket(uri, protocols, opts) {\n        return !$9ab7b46a38551fa4$var$isReactNative ? protocols ? new $9ab7b46a38551fa4$var$WebSocketCtor(uri, protocols) : new $9ab7b46a38551fa4$var$WebSocketCtor(uri) : new $9ab7b46a38551fa4$var$WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n\n});\n\nparcelRegister(\"hJTtX\", function(module, exports) {\n\n$parcel$export(module.exports, \"WT\", () => $cea1ad415a07b478$export$961c930859384407);\n\nvar $6opKi = parcelRequire(\"6opKi\");\n\nvar $bN72v = parcelRequire(\"bN72v\");\n\nvar $CnWUo = parcelRequire(\"CnWUo\");\nclass $cea1ad415a07b478$export$961c930859384407 extends (0, $6opKi.Transport) {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        } catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed.then(()=>{\n            this.onClose();\n        }).catch((err)=>{\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(()=>{\n            this._transport.createBidirectionalStream().then((stream)=>{\n                const decoderStream = (0, $CnWUo.createPacketDecoderStream)(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = (0, $CnWUo.createPacketEncoderStream)();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = ()=>{\n                    reader.read().then(({ done: done, value: value })=>{\n                        if (done) return;\n                        this.onPacket(value);\n                        read();\n                    }).catch((err)=>{});\n                };\n                read();\n                const packet = {\n                    type: \"open\"\n                };\n                if (this.query.sid) packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                this._writer.write(packet).then(()=>this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for(let i = 0; i < packets.length; i++){\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(()=>{\n                if (lastPacket) (0, $bN72v.nextTick)(()=>{\n                    this.writable = true;\n                    this.emitReserved(\"drain\");\n                }, this.setTimeoutFn);\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 || _a.close();\n    }\n}\n\n});\n\n\nparcelRegister(\"l7wSz\", function(module, exports) {\n\n$parcel$export(module.exports, \"parse\", () => $f603c1892ffe9e8b$export$98e6a39c04603d36);\n// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */ const $f603c1892ffe9e8b$var$re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst $f603c1892ffe9e8b$var$parts = [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'anchor'\n];\nfunction $f603c1892ffe9e8b$export$98e6a39c04603d36(str) {\n    if (str.length > 8000) throw \"URI too long\";\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    let m = $f603c1892ffe9e8b$var$re.exec(str || ''), uri = {}, i = 14;\n    while(i--)uri[$f603c1892ffe9e8b$var$parts[i]] = m[i] || '';\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = $f603c1892ffe9e8b$var$pathNames(uri, uri['path']);\n    uri.queryKey = $f603c1892ffe9e8b$var$queryKey(uri, uri['query']);\n    return uri;\n}\nfunction $f603c1892ffe9e8b$var$pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) names.splice(0, 1);\n    if (path.slice(-1) == '/') names.splice(names.length - 1, 1);\n    return names;\n}\nfunction $f603c1892ffe9e8b$var$queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function($0, $1, $2) {\n        if ($1) data[$1] = $2;\n    });\n    return data;\n}\n\n});\n\n\nparcelRegister(\"i3KZp\", function(module, exports) {\n\nvar $7pvuz = parcelRequire(\"7pvuz\");\nclass $d25cf4f3df002b9c$export$1e7deca84b429035 extends (0, $7pvuz.Polling) {\n    doPoll() {\n        this._fetch().then((res)=>{\n            if (!res.ok) return this.onError(\"fetch read error\", res.status, res);\n            res.text().then((data)=>this.onData(data));\n        }).catch((err)=>{\n            this.onError(\"fetch read error\", err);\n        });\n    }\n    doWrite(data, callback) {\n        this._fetch(data).then((res)=>{\n            if (!res.ok) return this.onError(\"fetch write error\", res.status, res);\n            callback();\n        }).catch((err)=>{\n            this.onError(\"fetch write error\", err);\n        });\n    }\n    _fetch(data) {\n        var _a;\n        const isPost = data !== undefined;\n        const headers = new Headers(this.opts.extraHeaders);\n        if (isPost) headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\n        (_a = this.socket._cookieJar) === null || _a === void 0 || _a.appendCookies(headers);\n        return fetch(this.uri(), {\n            method: isPost ? \"POST\" : \"GET\",\n            body: isPost ? data : null,\n            headers: headers,\n            credentials: this.opts.withCredentials ? \"include\" : \"omit\"\n        }).then((res)=>{\n            var _a;\n            // @ts-ignore getSetCookie() was added in Node.js v19.7.0\n            (_a = this.socket._cookieJar) === null || _a === void 0 || _a.parseCookies(res.headers.getSetCookie());\n            return res;\n        });\n    }\n}\n\n});\n\n\n\nparcelRegister(\"fL4YY\", function(module, exports) {\n\n$parcel$export(module.exports, \"Manager\", () => $b78f1c3cb524f77d$export$d0d38e7dec7a1a61);\nparcelRequire(\"1XKMK\");\nvar $5vwdc = parcelRequire(\"5vwdc\");\nvar $bN72v = parcelRequire(\"bN72v\");\nvar $al9N3 = parcelRequire(\"al9N3\");\n\nvar $lGX0c = parcelRequire(\"lGX0c\");\n\nvar $2BjQv = parcelRequire(\"2BjQv\");\n\nvar $vPX8d = parcelRequire(\"vPX8d\");\n\nvar $5pEXn = parcelRequire(\"5pEXn\");\n\nvar $5hHAH = parcelRequire(\"5hHAH\");\nclass $b78f1c3cb524f77d$export$d0d38e7dec7a1a61 extends (0, $5hHAH.Emitter) {\n    constructor(uri, opts){\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        (0, $5vwdc.installTimerFunctions)(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new (0, $5pEXn.Backoff)({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor()\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || $2BjQv;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect) this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length) return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) this.skipReconnect = true;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined) return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined) return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 || _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined) return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 || _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined) return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 || _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length) return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */ maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting && this._reconnection && this.backoff.attempts === 0) // keeps reconnection from firing twice for the same reconnection loop\n        this.reconnect();\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */ open(fn) {\n        if (~this._readyState.indexOf(\"open\")) return this;\n        this.engine = new (0, $al9N3.Socket)(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = (0, $vPX8d.on)(socket, \"open\", function() {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err)=>{\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) fn(err);\n            else // Only do this if there is no fn to handle the error\n            this.maybeReconnectOnOpen();\n        };\n        // emit `error`\n        const errorSub = (0, $vPX8d.on)(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(()=>{\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) timer.unref();\n            this.subs.push(()=>{\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */ connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */ onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push((0, $vPX8d.on)(socket, \"ping\", this.onping.bind(this)), (0, $vPX8d.on)(socket, \"data\", this.ondata.bind(this)), (0, $vPX8d.on)(socket, \"error\", this.onerror.bind(this)), (0, $vPX8d.on)(socket, \"close\", this.onclose.bind(this)), // @ts-ignore\n        (0, $vPX8d.on)(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */ onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */ ondata(data) {\n        try {\n            this.decoder.add(data);\n        } catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */ ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        (0, $bN72v.nextTick)(()=>{\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */ onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */ socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new (0, $lGX0c.Socket)(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        } else if (this._autoConnect && !socket.active) socket.connect();\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */ _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps){\n            const socket = this.nsps[nsp];\n            if (socket.active) return;\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */ _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for(let i = 0; i < encodedPackets.length; i++)this.engine.write(encodedPackets[i], packet.options);\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */ cleanup() {\n        this.subs.forEach((subDestroy)=>subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */ _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */ disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */ onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 || _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) this.reconnect();\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */ reconnect() {\n        if (this._reconnecting || this.skipReconnect) return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        } else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(()=>{\n                if (self.skipReconnect) return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect) return;\n                self.open((err)=>{\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    } else self.onreconnect();\n                });\n            }, delay);\n            if (this.opts.autoUnref) timer.unref();\n            this.subs.push(()=>{\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */ onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n\n});\nparcelRegister(\"lGX0c\", function(module, exports) {\n\n$parcel$export(module.exports, \"Socket\", () => $fcab49da21a6222a$export$4798917dbf149b79);\n\nvar $2BjQv = parcelRequire(\"2BjQv\");\n\nvar $vPX8d = parcelRequire(\"vPX8d\");\n\nvar $5hHAH = parcelRequire(\"5hHAH\");\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */ const $fcab49da21a6222a$var$RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1\n});\nclass $fcab49da21a6222a$export$4798917dbf149b79 extends (0, $5hHAH.Emitter) {\n    /**\n     * `Socket` constructor.\n     */ constructor(io, nsp, opts){\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */ this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */ this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */ this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */ this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */ this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */ this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */ this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) this.auth = opts.auth;\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect) this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */ get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */ subEvents() {\n        if (this.subs) return;\n        const io = this.io;\n        this.subs = [\n            (0, $vPX8d.on)(io, \"open\", this.onopen.bind(this)),\n            (0, $vPX8d.on)(io, \"packet\", this.onpacket.bind(this)),\n            (0, $vPX8d.on)(io, \"error\", this.onerror.bind(this)),\n            (0, $vPX8d.on)(io, \"close\", this.onclose.bind(this))\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */ get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */ connect() {\n        if (this.connected) return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"]) this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState) this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */ open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */ send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */ emit(ev, ...args) {\n        var _a, _b, _c;\n        if ($fcab49da21a6222a$var$RESERVED_EVENTS.hasOwnProperty(ev)) throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: (0, $2BjQv.PacketType).EVENT,\n            data: args\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) ;\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        } else this.sendBuffer.push(packet);\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */ _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(()=>{\n            delete this.acks[id];\n            for(let i = 0; i < this.sendBuffer.length; i++)if (this.sendBuffer[i].id === id) this.sendBuffer.splice(i, 1);\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args)=>{\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */ emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject)=>{\n            const fn = (arg1, arg2)=>{\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */ _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") ack = args.pop();\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args: args,\n            flags: Object.assign({\n                fromQueue: true\n            }, this.flags)\n        };\n        args.push((err, ...responseArgs)=>{\n            if (packet !== this._queue[0]) // the packet has already been acknowledged\n            return;\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) ack(err);\n                }\n            } else {\n                this._queue.shift();\n                if (ack) ack(null, ...responseArgs);\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */ _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) return;\n        const packet = this._queue[0];\n        if (packet.pending && !force) return;\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */ packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */ onopen() {\n        if (typeof this.auth == \"function\") this.auth((data)=>{\n            this._sendConnectPacket(data);\n        });\n        else this._sendConnectPacket(this.auth);\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */ _sendConnectPacket(data) {\n        this.packet({\n            type: (0, $2BjQv.PacketType).CONNECT,\n            data: this._pid ? Object.assign({\n                pid: this._pid,\n                offset: this._lastOffset\n            }, data) : data\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */ onerror(err) {\n        if (!this.connected) this.emitReserved(\"connect_error\", err);\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */ onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */ _clearAcks() {\n        Object.keys(this.acks).forEach((id)=>{\n            const isBuffered = this.sendBuffer.some((packet)=>String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) ack.call(this, new Error(\"socket has been disconnected\"));\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */ onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace) return;\n        switch(packet.type){\n            case (0, $2BjQv.PacketType).CONNECT:\n                if (packet.data && packet.data.sid) this.onconnect(packet.data.sid, packet.data.pid);\n                else this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                break;\n            case (0, $2BjQv.PacketType).EVENT:\n            case (0, $2BjQv.PacketType).BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case (0, $2BjQv.PacketType).ACK:\n            case (0, $2BjQv.PacketType).BINARY_ACK:\n                this.onack(packet);\n                break;\n            case (0, $2BjQv.PacketType).DISCONNECT:\n                this.ondisconnect();\n                break;\n            case (0, $2BjQv.PacketType).CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */ onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) args.push(this.ack(packet.id));\n        if (this.connected) this.emitEvent(args);\n        else this.receiveBuffer.push(Object.freeze(args));\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners)listener.apply(this, args);\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") this._lastOffset = args[args.length - 1];\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */ ack(id) {\n        const self = this;\n        let sent = false;\n        return function(...args) {\n            // prevent double callbacks\n            if (sent) return;\n            sent = true;\n            self.packet({\n                type: (0, $2BjQv.PacketType).ACK,\n                id: id,\n                data: args\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */ onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") return;\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) packet.data.unshift(null);\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */ onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */ emitBuffered() {\n        this.receiveBuffer.forEach((args)=>this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet)=>{\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */ ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */ destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy)=>subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */ disconnect() {\n        if (this.connected) this.packet({\n            type: (0, $2BjQv.PacketType).DISCONNECT\n        });\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) // fire events\n        this.onclose(\"io client disconnect\");\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */ close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */ compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */ get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */ timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */ onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */ prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */ offAny(listener) {\n        if (!this._anyListeners) return this;\n        if (listener) {\n            const listeners = this._anyListeners;\n            for(let i = 0; i < listeners.length; i++)if (listener === listeners[i]) {\n                listeners.splice(i, 1);\n                return this;\n            }\n        } else this._anyListeners = [];\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */ listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */ onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */ prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */ offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) return this;\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for(let i = 0; i < listeners.length; i++)if (listener === listeners[i]) {\n                listeners.splice(i, 1);\n                return this;\n            }\n        } else this._anyOutgoingListeners = [];\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */ listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */ notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners)listener.apply(this, packet.data);\n        }\n    }\n}\n\n});\nparcelRegister(\"2BjQv\", function(module, exports) {\n\n$parcel$export(module.exports, \"protocol\", () => $1e4e6e6cc3958162$export$a51d6b395ff4c65a);\n$parcel$export(module.exports, \"PacketType\", () => $1e4e6e6cc3958162$export$84d4095e16c6fc19);\n$parcel$export(module.exports, \"Encoder\", () => $1e4e6e6cc3958162$export$a50aceb0e02a00aa);\n$parcel$export(module.exports, \"Decoder\", () => $1e4e6e6cc3958162$export$f9de6ca0bc043724);\n\nvar $5hHAH = parcelRequire(\"5hHAH\");\n\nvar $8URBv = parcelRequire(\"8URBv\");\n\nvar $eGKCF = parcelRequire(\"eGKCF\");\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */ const $1e4e6e6cc3958162$var$RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\"\n];\nconst $1e4e6e6cc3958162$export$a51d6b395ff4c65a = 5;\nvar $1e4e6e6cc3958162$export$84d4095e16c6fc19;\n(function(PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})($1e4e6e6cc3958162$export$84d4095e16c6fc19 || ($1e4e6e6cc3958162$export$84d4095e16c6fc19 = {}));\nclass $1e4e6e6cc3958162$export$a50aceb0e02a00aa {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */ constructor(replacer){\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */ encode(obj) {\n        if (obj.type === $1e4e6e6cc3958162$export$84d4095e16c6fc19.EVENT || obj.type === $1e4e6e6cc3958162$export$84d4095e16c6fc19.ACK) {\n            if ((0, $eGKCF.hasBinary)(obj)) return this.encodeAsBinary({\n                type: obj.type === $1e4e6e6cc3958162$export$84d4095e16c6fc19.EVENT ? $1e4e6e6cc3958162$export$84d4095e16c6fc19.BINARY_EVENT : $1e4e6e6cc3958162$export$84d4095e16c6fc19.BINARY_ACK,\n                nsp: obj.nsp,\n                data: obj.data,\n                id: obj.id\n            });\n        }\n        return [\n            this.encodeAsString(obj)\n        ];\n    }\n    /**\n     * Encode packet as string.\n     */ encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === $1e4e6e6cc3958162$export$84d4095e16c6fc19.BINARY_EVENT || obj.type === $1e4e6e6cc3958162$export$84d4095e16c6fc19.BINARY_ACK) str += obj.attachments + \"-\";\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) str += obj.nsp + \",\";\n        // immediately followed by the id\n        if (null != obj.id) str += obj.id;\n        // json data\n        if (null != obj.data) str += JSON.stringify(obj.data, this.replacer);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */ encodeAsBinary(obj) {\n        const deconstruction = (0, $8URBv.deconstructPacket)(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction $1e4e6e6cc3958162$var$isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\nclass $1e4e6e6cc3958162$export$f9de6ca0bc043724 extends (0, $5hHAH.Emitter) {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */ constructor(reviver){\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */ add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) throw new Error(\"got plaintext data when reconstructing a packet\");\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === $1e4e6e6cc3958162$export$84d4095e16c6fc19.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === $1e4e6e6cc3958162$export$84d4095e16c6fc19.BINARY_ACK) {\n                packet.type = isBinaryEvent ? $1e4e6e6cc3958162$export$84d4095e16c6fc19.EVENT : $1e4e6e6cc3958162$export$84d4095e16c6fc19.ACK;\n                // binary packet's json\n                this.reconstructor = new $1e4e6e6cc3958162$var$BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) super.emitReserved(\"decoded\", packet);\n            } else // non-binary full packet\n            super.emitReserved(\"decoded\", packet);\n        } else if ((0, $eGKCF.isBinary)(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) throw new Error(\"got binary data when not reconstructing a packet\");\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        } else throw new Error(\"Unknown type: \" + obj);\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */ decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0))\n        };\n        if ($1e4e6e6cc3958162$export$84d4095e16c6fc19[p.type] === undefined) throw new Error(\"unknown packet type \" + p.type);\n        // look up attachments if type binary\n        if (p.type === $1e4e6e6cc3958162$export$84d4095e16c6fc19.BINARY_EVENT || p.type === $1e4e6e6cc3958162$export$84d4095e16c6fc19.BINARY_ACK) {\n            const start = i + 1;\n            while(str.charAt(++i) !== \"-\" && i != str.length);\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") throw new Error(\"Illegal attachments\");\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while(++i){\n                const c = str.charAt(i);\n                if (\",\" === c) break;\n                if (i === str.length) break;\n            }\n            p.nsp = str.substring(start, i);\n        } else p.nsp = \"/\";\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while(++i){\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length) break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if ($1e4e6e6cc3958162$export$f9de6ca0bc043724.isPayloadValid(p.type, payload)) p.data = payload;\n            else throw new Error(\"invalid payload\");\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        } catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch(type){\n            case $1e4e6e6cc3958162$export$84d4095e16c6fc19.CONNECT:\n                return $1e4e6e6cc3958162$var$isObject(payload);\n            case $1e4e6e6cc3958162$export$84d4095e16c6fc19.DISCONNECT:\n                return payload === undefined;\n            case $1e4e6e6cc3958162$export$84d4095e16c6fc19.CONNECT_ERROR:\n                return typeof payload === \"string\" || $1e4e6e6cc3958162$var$isObject(payload);\n            case $1e4e6e6cc3958162$export$84d4095e16c6fc19.EVENT:\n            case $1e4e6e6cc3958162$export$84d4095e16c6fc19.BINARY_EVENT:\n                return Array.isArray(payload) && (typeof payload[0] === \"number\" || typeof payload[0] === \"string\" && $1e4e6e6cc3958162$var$RESERVED_EVENTS.indexOf(payload[0]) === -1);\n            case $1e4e6e6cc3958162$export$84d4095e16c6fc19.ACK:\n            case $1e4e6e6cc3958162$export$84d4095e16c6fc19.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */ destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */ class $1e4e6e6cc3958162$var$BinaryReconstructor {\n    constructor(packet){\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */ takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = (0, $8URBv.reconstructPacket)(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */ finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n\n});\nparcelRegister(\"8URBv\", function(module, exports) {\n\n$parcel$export(module.exports, \"deconstructPacket\", () => $67dd224d5a131c9e$export$ac2edb9eb7af56f6);\n$parcel$export(module.exports, \"reconstructPacket\", () => $67dd224d5a131c9e$export$a00da3b1ec037a04);\n\nvar $eGKCF = parcelRequire(\"eGKCF\");\nfunction $67dd224d5a131c9e$export$ac2edb9eb7af56f6(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = $67dd224d5a131c9e$var$_deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return {\n        packet: pack,\n        buffers: buffers\n    };\n}\nfunction $67dd224d5a131c9e$var$_deconstructPacket(data, buffers) {\n    if (!data) return data;\n    if ((0, $eGKCF.isBinary)(data)) {\n        const placeholder = {\n            _placeholder: true,\n            num: buffers.length\n        };\n        buffers.push(data);\n        return placeholder;\n    } else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for(let i = 0; i < data.length; i++)newData[i] = $67dd224d5a131c9e$var$_deconstructPacket(data[i], buffers);\n        return newData;\n    } else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for(const key in data)if (Object.prototype.hasOwnProperty.call(data, key)) newData[key] = $67dd224d5a131c9e$var$_deconstructPacket(data[key], buffers);\n        return newData;\n    }\n    return data;\n}\nfunction $67dd224d5a131c9e$export$a00da3b1ec037a04(packet, buffers) {\n    packet.data = $67dd224d5a131c9e$var$_reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction $67dd224d5a131c9e$var$_reconstructPacket(data, buffers) {\n    if (!data) return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" && data.num >= 0 && data.num < buffers.length;\n        if (isIndexValid) return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        else throw new Error(\"illegal attachments\");\n    } else if (Array.isArray(data)) for(let i = 0; i < data.length; i++)data[i] = $67dd224d5a131c9e$var$_reconstructPacket(data[i], buffers);\n    else if (typeof data === \"object\") {\n        for(const key in data)if (Object.prototype.hasOwnProperty.call(data, key)) data[key] = $67dd224d5a131c9e$var$_reconstructPacket(data[key], buffers);\n    }\n    return data;\n}\n\n});\nparcelRegister(\"eGKCF\", function(module, exports) {\n\n$parcel$export(module.exports, \"isBinary\", () => $ab192732c3780e48$export$37488ff1135b1696);\n$parcel$export(module.exports, \"hasBinary\", () => $ab192732c3780e48$export$5234c529abdb5610);\nconst $ab192732c3780e48$var$withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst $ab192732c3780e48$var$isView = (obj)=>{\n    return typeof ArrayBuffer.isView === \"function\" ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n};\nconst $ab192732c3780e48$var$toString = Object.prototype.toString;\nconst $ab192732c3780e48$var$withNativeBlob = typeof Blob === \"function\" || typeof Blob !== \"undefined\" && $ab192732c3780e48$var$toString.call(Blob) === \"[object BlobConstructor]\";\nconst $ab192732c3780e48$var$withNativeFile = typeof File === \"function\" || typeof File !== \"undefined\" && $ab192732c3780e48$var$toString.call(File) === \"[object FileConstructor]\";\nfunction $ab192732c3780e48$export$37488ff1135b1696(obj) {\n    return $ab192732c3780e48$var$withNativeArrayBuffer && (obj instanceof ArrayBuffer || $ab192732c3780e48$var$isView(obj)) || $ab192732c3780e48$var$withNativeBlob && obj instanceof Blob || $ab192732c3780e48$var$withNativeFile && obj instanceof File;\n}\nfunction $ab192732c3780e48$export$5234c529abdb5610(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") return false;\n    if (Array.isArray(obj)) {\n        for(let i = 0, l = obj.length; i < l; i++){\n            if ($ab192732c3780e48$export$5234c529abdb5610(obj[i])) return true;\n        }\n        return false;\n    }\n    if ($ab192732c3780e48$export$37488ff1135b1696(obj)) return true;\n    if (obj.toJSON && typeof obj.toJSON === \"function\" && arguments.length === 1) return $ab192732c3780e48$export$5234c529abdb5610(obj.toJSON(), true);\n    for(const key in obj){\n        if (Object.prototype.hasOwnProperty.call(obj, key) && $ab192732c3780e48$export$5234c529abdb5610(obj[key])) return true;\n    }\n    return false;\n}\n\n});\n\n\n\nparcelRegister(\"vPX8d\", function(module, exports) {\n\n$parcel$export(module.exports, \"on\", () => $05fb321879039179$export$af631764ddc44097);\nfunction $05fb321879039179$export$af631764ddc44097(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n\n});\n\n\nparcelRegister(\"5pEXn\", function(module, exports) {\n\n$parcel$export(module.exports, \"Backoff\", () => $3f0f0eae169725b6$export$2d38012449449c89);\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */ function $3f0f0eae169725b6$export$2d38012449449c89(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */ $3f0f0eae169725b6$export$2d38012449449c89.prototype.duration = function() {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */ $3f0f0eae169725b6$export$2d38012449449c89.prototype.reset = function() {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */ $3f0f0eae169725b6$export$2d38012449449c89.prototype.setMin = function(min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */ $3f0f0eae169725b6$export$2d38012449449c89.prototype.setMax = function(max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */ $3f0f0eae169725b6$export$2d38012449449c89.prototype.setJitter = function(jitter) {\n    this.jitter = jitter;\n};\n\n});\n\n\n\n\n//# sourceMappingURL=AppliedJobs_navbar.component.d68ff90d.js.map\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { Polling } from \"./polling.js\";\n/**\n * HTTP long-polling based on the built-in `fetch()` method.\n *\n * Usage: browser, Node.js (since v18), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch\n * @see https://caniuse.com/fetch\n * @see https://nodejs.org/api/globals.html#fetch\n */\nexport class Fetch extends Polling {\n    doPoll() {\n        this._fetch()\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch read error\", res.status, res);\n            }\n            res.text().then((data) => this.onData(data));\n        })\n            .catch((err) => {\n            this.onError(\"fetch read error\", err);\n        });\n    }\n    doWrite(data, callback) {\n        this._fetch(data)\n            .then((res) => {\n            if (!res.ok) {\n                return this.onError(\"fetch write error\", res.status, res);\n            }\n            callback();\n        })\n            .catch((err) => {\n            this.onError(\"fetch write error\", err);\n        });\n    }\n    _fetch(data) {\n        var _a;\n        const isPost = data !== undefined;\n        const headers = new Headers(this.opts.extraHeaders);\n        if (isPost) {\n            headers.set(\"content-type\", \"text/plain;charset=UTF-8\");\n        }\n        (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);\n        return fetch(this.uri(), {\n            method: isPost ? \"POST\" : \"GET\",\n            body: isPost ? data : null,\n            headers,\n            credentials: this.opts.withCredentials ? \"include\" : \"omit\",\n        }).then((res) => {\n            var _a;\n            // @ts-ignore getSetCookie() was added in Node.js v19.7.0\n            (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());\n            return res;\n        });\n    }\n}\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$523eaa49d3f99bf8$export$841407ceb083bd74","$kATNo","$fL4YY","$lGX0c","$523eaa49d3f99bf8$var$cache","uri","opts","io","undefined","parsed","url","path","source","id","sameNamespace","forceNew","multiplex","Manager","query","queryKey","socket","assign","Socket","connect","$efe27346e00da8a8$export$128fa18b7194ef","$l7wSz","loc","obj","location","protocol","host","charAt","test","parse","port","ipv6","indexOf","href","installTimerFunctions","nextTick","$al9N3","$787375aed2c43820$export$4798917dbf149b79","$gEtm1","$5vwdc","$2buxl","$5hHAH","$CnWUo","$bN72v","$787375aed2c43820$var$withEventListeners","addEventListener","removeEventListener","$787375aed2c43820$var$OFFLINE_EVENT_LISTENERS","forEach","listener","$787375aed2c43820$export$3874118029a0ee0d","Emitter","binaryType","defaultBinaryType","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","hostname","secure","transports","_transportsByName","t","transportName","prototype","name","push","agent","withCredentials","upgrade","timestampParam","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","replace","decode","_beforeunloadEventListener","transport","removeAllListeners","close","_offlineEventListener","_onClose","description","_cookieJar","createCookieJar","_open","createTransport","EIO","sid","length","setTimeoutFn","emitReserved","priorWebsocketSuccess","readyState","open","setTransport","on","_onDrain","bind","_onPacket","_onError","reason","onOpen","flush","packet","type","onHandshake","JSON","data","_sendPacket","_resetPingTimeout","err","Error","code","pingInterval","pingTimeout","maxPayload","clearTimeoutFn","_pingTimeoutTimer","delay","Date","now","autoUnref","unref","splice","writable","upgrading","packets","_getWritablePackets","send","payloadSize","i","byteLength","slice","_hasPingExpired","hasExpired","write","msg","options","fn","compress","once","cleanupAndClose","off","waitForUpgrade","tryAllTransports","shift","$787375aed2c43820$export$cc521fcb1004e85c","arguments","_upgrades","_probe","failed","onTransportOpen","pause","cleanup","freezeTransport","onerror","error","onTransportClose","onclose","onupgrade","to","removeListener","_filterUpgrades","upgrades","filteredUpgrades","o","map","filter","$c1f726e793763466$export$46dec00755c1153b","$3W81j","$dhyBt","$hJTtX","websocket","WS","webtransport","WT","polling","XHR","$2ddd02863faa1587$export$a2d42eb087c10497","$7pvuz","$kxvpX","$2ddd02863faa1587$var$empty","$2ddd02863faa1587$export$c959f2344155d309","Polling","isSSL","xd","doWrite","req","request","method","xhrStatus","context","onError","doPoll","onData","pollXhr","$2ddd02863faa1587$export$7fa6c5b6f8193917","createRequest","_opts","_method","_uri","_data","_create","_a","pick","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","hasOwnProperty","setRequestHeader","cookieJar","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","$2ddd02863faa1587$var$unloadHandler","attachEvent","globalThisShim","$2ddd02863faa1587$var$hasXHR2","$2ddd02863faa1587$var$newRequest","responseType","forceBase64","supportsBinary","XMLHttpRequest","hasCORS","concat","join","$56534be56e5aa809$export$265ee5eefd4c309b","$6opKi","Transport","_polling","doOpen","_poll","onPause","total","decodePayload","onClose","onPacket","doClose","encodePayload","schema","timestampRequests","randomString","b64","createUri","$4a78f487f5bb98d8$export$86495b081fef8e52","$ezyGD","$4a78f487f5bb98d8$export$8e68de6fb26f2236","decodePacket","details","_hostname","_port","_query","Number","encodedQuery","encode","$0736208648dc8bae$var$TEXT_DECODER","$0736208648dc8bae$export$144d64fe58dad441","$0736208648dc8bae$export$d10cc2e7f7566a2d","$0736208648dc8bae$export$a525fb718e9c623a","$0736208648dc8bae$export$552d20aac7500f47","$0736208648dc8bae$export$a51d6b395ff4c65a","encodePacket","$bRHuL","$fsDlh","callback","encodedPackets","Array","count","encodedPacket","String","encodedPayload","split","decodedPacket","TransformStream","transform","controller","encodePacketToBinary","header","payloadLength","DataView","Uint8Array","buffer","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","$0736208648dc8bae$var$totalLength","chunks","reduce","acc","chunk","$0736208648dc8bae$var$concatChunks","size","j","TextDecoder","state","expectedLength","isBinary","headerArray","byteOffset","getUint16","getUint32","Math","ERROR_PACKET","$8a3662315a48cdbd$var$TEXT_ENCODER","$8a3662315a48cdbd$export$57852049361a8e62","$8a3662315a48cdbd$export$ec0c9b9013ee0ef5","$8a3662315a48cdbd$var$withNativeBlob","Blob","toString","call","$8a3662315a48cdbd$var$withNativeArrayBuffer","ArrayBuffer","$8a3662315a48cdbd$var$isView","isView","$8a3662315a48cdbd$var$encodeBlobAsBase64","PACKET_TYPES","fileReader","FileReader","onload","content","result","readAsDataURL","$8a3662315a48cdbd$var$toArray","arrayBuffer","then","encoded","TextEncoder","$b417fd17fc84e4e3$export$c169aefb7330cccb","$b417fd17fc84e4e3$export$47791e8004edd485","$b417fd17fc84e4e3$export$c718b5840781f8a7","create","keys","key","$a9bf3da28855a34f$export$4647901878f33f31","$aVEkU","$a9bf3da28855a34f$var$withNativeArrayBuffer","$a9bf3da28855a34f$var$mapBinary","$a9bf3da28855a34f$var$decodeBase64Packet","substring","PACKET_TYPES_REVERSE","base64","$7f4e842ae29bcbc5$export$2f872c0f2117be69","$7f4e842ae29bcbc5$var$chars","$7f4e842ae29bcbc5$var$lookup","charCodeAt","bufferLength","len","p","encoded1","encoded2","encoded3","encoded4","arraybuffer","bytes","$3d905a8ca243a015$export$4293555f241ae35a","$3d905a8ca243a015$var$mixin","event","_callbacks","apply","cb","callbacks","emit","args","listeners","hasListeners","$4028d5a20a4526d1$export$357523c63a2253b9","$4028d5a20a4526d1$export$2f67576668b97183","$4028d5a20a4526d1$export$a48f0734ac7c2329","$4028d5a20a4526d1$export$7fa8378418b4411e","attr","k","$4028d5a20a4526d1$var$NATIVE_SET_TIMEOUT","setTimeout","$4028d5a20a4526d1$var$NATIVE_CLEAR_TIMEOUT","clearTimeout","useNativeTimers","$4028d5a20a4526d1$var$utf8Length","str","c","l","ceil","random","$8959bb304e43f43f$export$bdd553fddd433dcb","$8959bb304e43f43f$export$394f9358f6231289","$8959bb304e43f43f$export$790dcbc41e2d75d5","$8959bb304e43f43f$export$19413efcf2fac759","Promise","resolve","self","window","Function","$19744bce3c183d10$export$c564cdbbe6da493","encodeURIComponent","$19744bce3c183d10$export$2f872c0f2117be69","qs","qry","pairs","pair","decodeURIComponent","$ef3f42a25dd224af$export$5235bbd4a1ef06e","$ef3f42a25dd224af$var$value","$9ab7b46a38551fa4$export$911baa0677ac404c","$9ab7b46a38551fa4$var$isReactNative","navigator","product","toLowerCase","$9ab7b46a38551fa4$export$570bf71d2367e261","protocols","headers","ws","createSocket","addEventListeners","onopen","_socket","closeEvent","onmessage","ev","lastPacket","$9ab7b46a38551fa4$var$WebSocketCtor","WebSocket","MozWebSocket","_packet","$cea1ad415a07b478$export$961c930859384407","_transport","WebTransport","closed","catch","ready","createBidirectionalStream","stream","decoderStream","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","createPacketEncoderStream","pipeTo","_writer","getWriter","read","done","value","$f603c1892ffe9e8b$export$98e6a39c04603d36","$f603c1892ffe9e8b$var$re","$f603c1892ffe9e8b$var$parts","src","b","m","exec","authority","ipv6uri","pathNames","$f603c1892ffe9e8b$var$pathNames","names","$f603c1892ffe9e8b$var$queryKey","$0","$1","$2","$b78f1c3cb524f77d$export$d0d38e7dec7a1a61","$2BjQv","$vPX8d","$5pEXn","nsps","subs","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","_readyState","_parser","parser","encoder","Encoder","decoder","Decoder","_autoConnect","autoConnect","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","_reconnecting","attempts","reconnect","engine","openSubDestroy","errorSub","timer","onping","ondata","ondecoded","add","nsp","active","_destroy","_close","subDestroy","destroy","disconnect","reset","duration","onreconnect","attempt","$fcab49da21a6222a$export$4798917dbf149b79","$fcab49da21a6222a$var$RESERVED_EVENTS","freeze","connect_error","disconnecting","newListener","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","disconnected","subEvents","onpacket","unshift","_b","_c","retries","fromQueue","volatile","_addToQueue","PacketType","EVENT","ack","pop","_registerAckCallback","isTransportWritable","isConnected","notifyOutgoingListeners","ackTimeout","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","CONNECT","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","BINARY_EVENT","onevent","ACK","BINARY_ACK","onack","DISCONNECT","ondisconnect","CONNECT_ERROR","message","emitEvent","_anyListeners","sent","emitBuffered","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","$1e4e6e6cc3958162$export$a51d6b395ff4c65a","$1e4e6e6cc3958162$export$84d4095e16c6fc19","$1e4e6e6cc3958162$export$a50aceb0e02a00aa","$1e4e6e6cc3958162$export$f9de6ca0bc043724","$8URBv","$eGKCF","$1e4e6e6cc3958162$var$RESERVED_EVENTS","replacer","hasBinary","encodeAsBinary","encodeAsString","attachments","stringify","deconstruction","deconstructPacket","pack","buffers","$1e4e6e6cc3958162$var$isObject","reviver","reconstructor","isBinaryEvent","decodeString","$1e4e6e6cc3958162$var$BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","isArray","finishedReconstruction","reconPack","binData","reconstructPacket","$67dd224d5a131c9e$export$ac2edb9eb7af56f6","$67dd224d5a131c9e$export$a00da3b1ec037a04","packetData","$67dd224d5a131c9e$var$_deconstructPacket","placeholder","_placeholder","num","newData","$67dd224d5a131c9e$var$_reconstructPacket","$ab192732c3780e48$export$37488ff1135b1696","$ab192732c3780e48$export$5234c529abdb5610","toJSON","$ab192732c3780e48$var$withNativeArrayBuffer","$ab192732c3780e48$var$isView","$ab192732c3780e48$var$toString","$ab192732c3780e48$var$withNativeBlob","$ab192732c3780e48$var$withNativeFile","File","$05fb321879039179$export$af631764ddc44097","$3f0f0eae169725b6$export$2d38012449449c89","ms","factor","pow","rand","deviation","floor"],"version":3,"file":"AppliedJobs_navbar.component.d68ff90d.js.map"}
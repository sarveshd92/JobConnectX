{"mappings":"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","sources":["<anon>","Components/job_components/Job_user_applications.admin.components.js"],"sourcesContent":["\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true, configurable: true});\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire10c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"gj5Sz\", function(module, exports) {\n\n$parcel$defineInteropFlag(module.exports);\n\n$parcel$export(module.exports, \"default\", () => $bdf2fb3007d0d3d7$export$2e2bcd8739ae039);\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $fmRoT = parcelRequire(\"fmRoT\");\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $lzNIT = parcelRequire(\"lzNIT\");\nvar $aphAM = parcelRequire(\"aphAM\");\nconst $bdf2fb3007d0d3d7$var$JobUserApplications = ()=>{\n    const [companies, setCompanies] = (0, $acw62.useState)([]);\n    const { jobid: jobid } = (0, $aphAM.useParams)();\n    const navigate = (0, $lzNIT.useNavigate)();\n    const fetchData = async ()=>{\n        try {\n            const response = await (0, $fmRoT.default).get(`http://localhost:8000/api/v1/job/getjobbyid/${jobid}`, {\n                withCredentials: true\n            });\n            setCompanies(response.data.result || []);\n        } catch (error) {\n            console.log(\"Error fetching companies:\", error);\n        }\n    };\n    const handleClick = async (status, appid, userid)=>{\n        try {\n            console.log(appid, \"->\", userid);\n            const response = await (0, $fmRoT.default).put(`http://localhost:8000/api/v1/application/updatestatus/${appid}`, {\n                status: status,\n                userid: userid\n            }, {\n                withCredentials: true,\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            // Update the local state to reflect the status change\n            setCompanies((prevCompanies)=>{\n                const updatedApplications = prevCompanies.application.map((application)=>application._id === appid ? {\n                        ...application,\n                        status: status\n                    } : application);\n                return {\n                    ...prevCompanies,\n                    application: updatedApplications\n                };\n            });\n            console.log(response);\n        } catch (error) {\n            console.error(\"Error updating status:\", error);\n        }\n    };\n    const handleChat = (userid)=>{\n        navigate(`/chat/${userid}`);\n    };\n    (0, $acw62.useEffect)(()=>{\n        fetchData();\n    }, []);\n    console.log(companies);\n    return /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n        className: \"mt-4 p-6 bg-gray-50 min-h-screen\",\n        children: [\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"h1\", {\n                className: \"text-3xl font-bold text-gray-900 mb-6\",\n                children: [\n                    \"Applicants (\",\n                    companies?.application?.length || \"0\",\n                    \")\"\n                ]\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                className: \"overflow-x-auto bg-white shadow-md rounded-lg border border-gray-200\",\n                children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"table\", {\n                    className: \"w-full min-w-full divide-y divide-gray-200\",\n                    children: [\n                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"thead\", {\n                            className: \"bg-gray-100\",\n                            children: /*#__PURE__*/ (0, $ayMG0.jsxs)(\"tr\", {\n                                children: [\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"th\", {\n                                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Full Name\"\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"th\", {\n                                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Email\"\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"th\", {\n                                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Contact\"\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"th\", {\n                                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Resume\"\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"th\", {\n                                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Date\"\n                                    }),\n                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"th\", {\n                                        className: \"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\",\n                                        children: \"Actions\"\n                                    })\n                                ]\n                            })\n                        }),\n                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"tbody\", {\n                            className: \"bg-white divide-y divide-gray-200\",\n                            children: !companies?.application?.length ? /*#__PURE__*/ (0, $ayMG0.jsx)(\"tr\", {\n                                children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                    className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500 font-medium\",\n                                    children: \"No applications for this job\"\n                                })\n                            }) : companies.application.map((application, index)=>/*#__PURE__*/ (0, $ayMG0.jsxs)(\"tr\", {\n                                    className: \"hover:bg-gray-50\",\n                                    children: [\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                            className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                                            children: application?.applicant?.fullname || \"N/A\"\n                                        }),\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                            className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-900\",\n                                            children: application?.applicant?.email || \"N/A\"\n                                        }),\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                            className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                                            children: application?.applicant?.phoneno || \"N/A\"\n                                        }),\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                            className: \"px-6 py-4 whitespace-nowrap text-sm text-blue-500\",\n                                            children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"a\", {\n                                                href: application?.applicant?.Profile?.resume,\n                                                target: \"_blank\",\n                                                rel: \"noopener noreferrer\",\n                                                className: \"hover:underline\",\n                                                children: application?.applicant?.Profile?.resume ? `${application.applicant.fullname}_Pdf` : \"Resume Not Uploaded\"\n                                            })\n                                        }),\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                            className: \"px-6 py-4 whitespace-nowrap text-sm text-gray-500\",\n                                            children: application?.applicant?.createdAt?.substr(0, 10) || \"N/A\"\n                                        }),\n                                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"td\", {\n                                            className: \"p-2\",\n                                            children: application.status === \"Pending\" ? /*#__PURE__*/ (0, $ayMG0.jsxs)((0, $ayMG0.Fragment), {\n                                                children: [\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                                                        className: \"m-2 bg-gray-800 hover:bg-gray-900 text-white rounded-lg p-2 focus:outline-none\",\n                                                        onClick: ()=>handleClick(\"Selected\", application._id, application?.applicant?._id),\n                                                        children: \"Selected\"\n                                                    }),\n                                                    /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                                                        className: \"bg-red-500 hover:bg-red-600 text-white rounded-lg p-2 focus:outline-none\",\n                                                        onClick: ()=>handleClick(\"Rejected\", application._id, application?.applicant?._id),\n                                                        children: \"Rejected\"\n                                                    })\n                                                ]\n                                            }) : /*#__PURE__*/ (0, $ayMG0.jsx)(\"button\", {\n                                                className: `m-2 bg-gray-800 text-white rounded-lg p-2 focus:outline-none cursor-not-allowed opacity-50`,\n                                                disabled: true,\n                                                children: application.status\n                                            })\n                                        }),\n                                        /*#__PURE__*/ (0, $ayMG0.jsxs)(\"td\", {\n                                            children: [\n                                                \" \",\n                                                /*#__PURE__*/ (0, $ayMG0.jsxs)(\"button\", {\n                                                    className: \"bg-red-500 hover:bg-red-600 text-white rounded-lg p-2 focus:outline-none\",\n                                                    onClick: ()=>handleChat(application?.applicant?._id),\n                                                    children: [\n                                                        \"\\uD83D\\uDCAC \",\n                                                        application?.applicant?._id\n                                                    ]\n                                                })\n                                            ]\n                                        })\n                                    ]\n                                }, index))\n                        })\n                    ]\n                })\n            })\n        ]\n    });\n};\nvar $bdf2fb3007d0d3d7$export$2e2bcd8739ae039 = $bdf2fb3007d0d3d7$var$JobUserApplications;\n\n});\n\n\n//# sourceMappingURL=Job_user_applications.admin.components.898f501f.js.map\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nconst JobUserApplications = () => {\n    const [companies, setCompanies] = useState([]);\n    const { jobid } = useParams();\n    const navigate=useNavigate();\n    const fetchData = async () => {\n        try {\n            const response = await axios.get(`http://localhost:8000/api/v1/job/getjobbyid/${jobid}`, {\n                withCredentials: true,\n            });\n            setCompanies(response.data.result || []);\n           \n            \n        } catch (error) {\n            console.log(\"Error fetching companies:\", error);\n        }\n    };\n\n    const handleClick = async (status, appid, userid) => {\n        try {\n            console.log(appid, \"->\", userid);\n            const response = await axios.put(\n                `http://localhost:8000/api/v1/application/updatestatus/${appid}`,\n                { status, userid },\n                {\n                    withCredentials: true,\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n\n            // Update the local state to reflect the status change\n            setCompanies((prevCompanies) => {\n                const updatedApplications = prevCompanies.application.map((application) =>\n                    application._id === appid\n                        ? { ...application, status }\n                        : application\n                );\n                return { ...prevCompanies, application: updatedApplications };\n            });\n\n            console.log(response);\n        } catch (error) {\n            console.error(\"Error updating status:\", error);\n        }\n    };\nconst handleChat=(userid)=>{\n\n     navigate(`/chat/${userid}`)\n}\n    useEffect(() => {\n        fetchData();\n    }, []);\n console.log(companies)\n    return (\n        <div className=\"mt-4 p-6 bg-gray-50 min-h-screen\">\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-6\">\n                Applicants ({companies?.application?.length || \"0\"})\n            </h1>\n            <div className=\"overflow-x-auto bg-white shadow-md rounded-lg border border-gray-200\">\n                <table className=\"w-full min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-100\">\n                        <tr>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Full Name</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Contact</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Resume</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Date</th>\n                            <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y divide-gray-200\">\n                        {!companies?.application?.length ? (\n                            <tr>\n                                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 font-medium\">\n                                    {\"No applications for this job\"} \n                                </td>\n                            </tr>\n                        ) : (\n                            companies.application.map((application, index) => (\n                                <tr key={index} className=\"hover:bg-gray-50\">\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                        {application?.applicant?.fullname || \"N/A\"}\n                                    </td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                                        {application?.applicant?.email || \"N/A\"}\n                                    </td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                        {application?.applicant?.phoneno || \"N/A\"}\n                                    </td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-blue-500\">\n                                        <a\n                                            href={application?.applicant?.Profile?.resume}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            className=\"hover:underline\"\n                                        >\n                                            {application?.applicant?.Profile?.resume\n                                                ? `${application.applicant.fullname}_Pdf`\n                                                : \"Resume Not Uploaded\"}\n                                        </a>\n                                    </td>\n                                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                                        {application?.applicant?.createdAt?.substr(0, 10) || \"N/A\"}\n                                    </td>\n                                    <td className=\"p-2\">\n                                        {application.status === \"Pending\" ? (\n                                            <>\n                                                <button\n                                                    className=\"m-2 bg-gray-800 hover:bg-gray-900 text-white rounded-lg p-2 focus:outline-none\"\n                                                    onClick={() =>\n                                                        handleClick(\"Selected\", application._id, application?.applicant?._id)\n                                                    }\n                                                >\n                                                    Selected\n                                                </button>\n\n                                                <button\n                                                    className=\"bg-red-500 hover:bg-red-600 text-white rounded-lg p-2 focus:outline-none\"\n                                                    onClick={() =>\n                                                        handleClick(\"Rejected\", application._id, application?.applicant?._id)\n                                                    }\n                                                >\n                                                    Rejected\n                                                </button>\n                                            </>\n                                        ) : (\n                                            <button\n                                                className={`m-2 bg-gray-800 text-white rounded-lg p-2 focus:outline-none cursor-not-allowed opacity-50`}\n                                                disabled\n                                            >\n                                                {application.status}\n                                            </button>\n                                        )}\n                                    </td>\n                                    <td> <button\n                                                    className=\"bg-red-500 hover:bg-red-600 text-white rounded-lg p-2 focus:outline-none\"\n                                                    onClick={() =>\n                                                        handleChat( application?.applicant?._id)\n                                                    }\n                                                >💬 {application?.applicant?._id}\n                                                    \n                                                </button></td>\n                                </tr>\n                            ))\n                        )}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    );\n};\n\nexport default JobUserApplications;\n"],"names":["parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","Object","defineProperty","value","configurable","get","$bdf2fb3007d0d3d7$export$2e2bcd8739ae039","set","s","enumerable","$ayMG0","$fmRoT","$acw62","$lzNIT","$aphAM","companies","setCompanies","useState","jobid","useParams","navigate","useNavigate","fetchData","response","default","withCredentials","data","result","error","console","log","handleClick","status","appid","userid","put","headers","prevCompanies","updatedApplications","application","map","_id","handleChat","useEffect","jsxs","className","children","length","jsx","index","applicant","fullname","email","phoneno","href","Profile","resume","target","rel","createdAt","substr","Fragment","onClick","disabled"],"version":3,"file":"Job_user_applications.admin.components.898f501f.js.map"}